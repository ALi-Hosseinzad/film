{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function Test() {\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?\";\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    hasMoreItems: true\n  });\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    getData();\n  }, [state.nextURL]);\n  var i = 0;\n\n  function getData() {\n    i++;\n    console.log(i);\n    var URL = apiurl + count + \"&count=5\";\n    fetch(URL).then(res => res.json()).then(res => {\n      // console.log(res);\n      if (res.meta.next_url) {\n        setState({\n          loading: false,\n          repos: res\n        });\n      } else {\n        setState({\n          hasMoreItems: false\n        });\n      }\n    });\n  }\n\n  function componentWillUpdate() {\n    setItems(prev => [...prev, res]);\n  }\n\n  const loader = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 ...\");\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: componentWillUpdate,\n    hasMore: state.hasMoreItems,\n    val: console.log(state),\n    useWindow: true,\n    loader: loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: state.isLoading,\n    repos: state.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","Test","apiurl","ListLoading","state","setState","loading","repos","hasMoreItems","count","setCount","getData","nextURL","i","console","log","URL","fetch","then","res","json","meta","next_url","componentWillUpdate","setItems","prev","loader","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,MAAM,GAAG,6CAAf;AACA,QAAMC,WAAW,GAAGL,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AACjCS,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,YAAY,EAAE;AAHmB,GAAD,CAAlC;AAKF,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBb,QAAQ,CAAC,CAAD,CAA/B;AAEED,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACP,KAAK,CAACQ,OAAP,CAFM,CAAT;AAIA,MAAIC,CAAC,GAAG,CAAR;;AACA,WAASF,OAAT,GAAmB;AACjBE,IAAAA,CAAC;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEA,QAAIG,GAAG,GAAGd,MAAM,GAAGO,KAAT,GAAiB,UAA3B;AACAQ,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb;AACA,UAAIA,GAAG,CAACE,IAAJ,CAASC,QAAb,EAAuB;AACrBjB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,OAAO,EAAE,KADF;AAEPC,UAAAA,KAAK,EAAEY;AAFA,SAAD,CAAR;AAID,OALD,MAKO;AACLd,QAAAA,QAAQ,CAAC;AACPG,UAAAA,YAAY,EAAE;AADP,SAAD,CAAR;AAGD;AACF,KAdH;AAeD;;AACA,WAASe,mBAAT,GAA8B;AAC7BC,IAAAA,QAAQ,CAAEC,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUN,GAAV,CAAX,CAAR;AACD;;AAGD,QAAMO,MAAM,gBAAG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GAAf;AACA,sBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEH,mBAFZ;AAGE,IAAA,OAAO,EAAEnB,KAAK,CAACI,YAHjB;AAIE,IAAA,GAAG,EAAEM,OAAO,CAACC,GAAR,CAAYX,KAAZ,CAJP;AAKE,IAAA,SAAS,EAAE,IALb;AAME,IAAA,MAAM,EAAEsB,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEtB,KAAK,CAACuB,SAA9B;AAAyC,IAAA,KAAK,EAAEvB,KAAK,CAACG,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nexport default function Test() {\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?\";\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    hasMoreItems: true,\n  });\nconst [count,setCount]=useState(0);\n\n  useEffect(() => {\n    getData();\n  }, [state.nextURL]);\n\n  var i = 0;\n  function getData() {\n    i++;\n    console.log(i);\n\n    var URL = apiurl + count + \"&count=5\";\n    fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n        // console.log(res);\n        if (res.meta.next_url) {\n          setState({\n            loading: false,\n            repos: res,\n          });\n        } else {\n          setState({\n            hasMoreItems: false,\n          });\n        }\n      });\n  }\n   function componentWillUpdate(){\n    setItems((prev) => [...prev, res]);\n  }\n \n\n  const loader = <div className=\"loader\">دریافت موارد بیشتر ...</div>;\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={componentWillUpdate}\n      hasMore={state.hasMoreItems}\n      val={console.log(state)}\n      useWindow={true}\n      loader={loader}\n    >\n      <ListLoading isLoading={state.isLoading} repos={state.repos} />\n    </InfiniteScroll>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}