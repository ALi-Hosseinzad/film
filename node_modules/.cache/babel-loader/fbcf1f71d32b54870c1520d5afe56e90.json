{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoad from \"./ContentLoadMore\"; // import ContentItems from \"./ContentItems\";\n\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function Test() {\n  // const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    nextURL: null,\n    hasMoreItems: true\n  }); //const [Url, setUrl] = useState([]);\n\n  useEffect(() => {\n    getData(\"/widgets/home-page?count=5\");\n  }); // function loadMore(url) {\n  //   //console.log(url);\n  //   //const array2 = url;\n  //   //url = url.filter(val => !array2.includes(val));\n  //   console.log(url, \"-------\");\n  //   // const allEqual = arr => arr.every( v => v === arr[0] )\n  //   // if(allEqual(url)){\n  //     // url =  url.shift();\n  //     //getData(\"/widgets/home-page?offset=5&count=5\");\n  //   // }\n  //   // for (let index = 0; index < url.length; index++) {\n  //   //   const element = url[index];\n  //   //   console.log(element);\n  //   //   if (element === url[index]){\n  //   //     console.log(url[index]);\n  //   //     return url[index]\n  //   //   }\n  //   // }\n  //   //setUrl(url);\n  //   //\n  // }\n\n  var i = 0;\n\n  async function getData(url) {\n    i++;\n    console.log(i);\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    var URL = apiurl + url;\n    await fetch(URL).then(res => res.json()).then(res => {\n      // console.log(res);\n      if (res.meta.next_url) {\n        setState({\n          loading: false,\n          repos: res,\n          nextURL: res.meta.next_url\n        });\n      } else {\n        setState({\n          hasMoreItems: false\n        });\n      } // setUrl((prev)=>[...prev,res.meta.next_url])\n\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"700px\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: getData(state.nextURL),\n    hasMore: state.hasMoreItems // val={console.log(state)}\n    ,\n    useWindow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContentLoad, {\n    repos: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useState","ContentLoad","InfiniteScroll","Test","state","setState","loading","repos","nextURL","hasMoreItems","getData","i","url","console","log","apiurl","URL","fetch","then","res","json","meta","next_url","height","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,OAAO,EAAE,IAHwB;AAIjCC,IAAAA,YAAY,EAAE;AAJmB,GAAD,CAAlC,CAF6B,CAQ7B;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAAC,4BAAD,CAAP;AACD,GAFQ,CAAT,CAV6B,CAc7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,CAAC,GAAG,CAAR;;AACA,iBAAeD,OAAf,CAAuBE,GAAvB,EAA4B;AAC1BD,IAAAA,CAAC;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA,UAAMI,MAAM,GAAG,0BAAf;AACA,QAAIC,GAAG,GAAGD,MAAM,GAAGH,GAAnB;AACA,UAAMK,KAAK,CAACD,GAAD,CAAL,CACHE,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGC,GAAD,IAAS;AACd;AACC,UAAIA,GAAG,CAACE,IAAJ,CAASC,QAAb,EAAuB;AACrBjB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,OAAO,EAAE,KADF;AAEPC,UAAAA,KAAK,EAAEY,GAFA;AAGPX,UAAAA,OAAO,EAAEW,GAAG,CAACE,IAAJ,CAASC;AAHX,SAAD,CAAR;AAKD,OAND,MAMO;AACLjB,QAAAA,QAAQ,CAAC;AACPI,UAAAA,YAAY,EAAE;AADP,SAAD,CAAR;AAGD,OAZY,CAab;;AACD,KAhBG,CAAN;AAiBD;;AACD,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEd,OAAO,CAACN,KAAK,CAACI,OAAP,CAFnB;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACK,YAHjB,CAIE;AAJF;AAKE,IAAA,SAAS,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEL,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAaD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoad from \"./ContentLoadMore\";\n// import ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nexport default function Test() {\n  // const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    nextURL: null,\n    hasMoreItems: true,\n  });\n  //const [Url, setUrl] = useState([]);\n\n  useEffect(() => {\n    getData(\"/widgets/home-page?count=5\");\n  });\n\n  // function loadMore(url) {\n  //   //console.log(url);\n  //   //const array2 = url;\n  //   //url = url.filter(val => !array2.includes(val));\n  //   console.log(url, \"-------\");\n  //   // const allEqual = arr => arr.every( v => v === arr[0] )\n  //   // if(allEqual(url)){\n  //     // url =  url.shift();\n  //     //getData(\"/widgets/home-page?offset=5&count=5\");\n  //   // }\n  //   // for (let index = 0; index < url.length; index++) {\n  //   //   const element = url[index];\n  //   //   console.log(element);\n  //   //   if (element === url[index]){\n  //   //     console.log(url[index]);\n  //   //     return url[index]\n  //   //   }\n  //   // }\n  //   //setUrl(url);\n  //   //\n  // }\n\n  var i = 0;\n  async function getData(url) {\n    i++;\n    console.log(i);\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    var URL = apiurl + url;\n    await fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n       // console.log(res);\n        if (res.meta.next_url) {\n          setState({\n            loading: false,\n            repos: res,\n            nextURL: res.meta.next_url,\n          });\n        } else {\n          setState({\n            hasMoreItems: false,\n          });\n        }\n        // setUrl((prev)=>[...prev,res.meta.next_url])\n      });\n  }\n  return (\n    <div style={{ height: \"700px\", overflow: \"auto\" }}>\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={getData(state.nextURL)}\n        hasMore={state.hasMoreItems}\n        // val={console.log(state)}\n        useWindow={true}\n      >\n        <ContentLoad repos={state} />\n      </InfiniteScroll>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}