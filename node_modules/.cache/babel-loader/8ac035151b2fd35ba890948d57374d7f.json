{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\"; // import InfiniteScroll from \"react-infinite-scroller\";\n\nconst FetchContent = url => {\n  const ListLoading = ContentLoading(ContentItems);\n  const apiUrl = `http://api-v2.filmnet.ir`;\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null\n  });\n\n  const FetchContent = () => {\n    console.log(url);\n    useEffect(() => {\n      setAppState({\n        loading: true\n      });\n      fetch(apiUrl + url).then(res => res.json()).then(repos => {\n        setAppState({\n          loading: false,\n          repos: repos\n        });\n      });\n    }, [setAppState]);\n  };\n\n  return;\n};\n\nexport default FetchContent;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","FetchContent","url","ListLoading","apiUrl","appState","setAppState","loading","repos","nextURL","console","log","fetch","then","res","json"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AAEA,MAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AACA,QAAMI,MAAM,GAAI,0BAAhB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAC;AAH+B,GAAD,CAAxC;;AAKA,QAAMR,YAAY,GAAG,MAAM;AACzBS,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAL,IAAAA,SAAS,CAAC,MAAM;AACdS,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAX;AACAK,MAAAA,KAAK,CAACR,MAAM,GAAGF,GAAV,CAAL,CACGW,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESL,KAAD,IAAW;AACfF,QAAAA,WAAW,CAAC;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,KAAK,EAAEA;AAAzB,SAAD,CAAX;AACD,OAJH;AAKD,KAPQ,EAON,CAACF,WAAD,CAPM,CAAT;AASD,GAXD;;AAaA;AACD,CAtBD;;AAuBA,eAAeL,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\n// import InfiniteScroll from \"react-infinite-scroller\";\n\nconst FetchContent = (url) => {\n  const ListLoading = ContentLoading(ContentItems);\n  const apiUrl = `http://api-v2.filmnet.ir`;\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL:null\n  });\n  const FetchContent = () => {\n    console.log(url);\n    useEffect(() => {\n      setAppState({ loading: true });\n      fetch(apiUrl + url)\n        .then((res) => res.json())\n        .then((repos) => {\n          setAppState({ loading: false, repos: repos });\n        });\n    }, [setAppState]);\n   \n  };\n\n  return ;\n};\nexport default FetchContent;\n"]},"metadata":{},"sourceType":"module"}