{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test2.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Posts from \"./ContentLoading\";\n\nfunction PostsContainer() {\n  const [data, setData] = useState();\n  const [shownData, setShownData] = useState();\n  const [page] = useState([]);\n  const URL = \"http://api-v2.filmnet.ir\";\n  const pageURL = \"/widgets/home-page?count=5\";\n  useEffect(() => {\n    fetchPosts(pageURL);\n  }, [page]);\n\n  async function fetchPosts(count) {\n    let res = await fetch(URL + count);\n    let json = await res.json();\n    let itemsToShow = selectNItems(json.data, json.data.length);\n    setShownData(itemsToShow);\n    setData(json);\n  }\n\n  const selectNItems = (obj, n) => {\n    // console.log(obj);\n    return obj.slice(0, n);\n  };\n\n  const loadMorePosts = url => {\n    console.log(url);\n    let items = fetchPosts(url);\n    setShownData(items);\n  };\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: loadMorePosts(\"\"),\n    hasMore: data && shownData && data.length > shownData.length,\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"Loading ...\"),\n    useWindow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    posts: shownData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default PostsContainer;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test2.jsx"],"names":["React","useState","useEffect","InfiniteScroll","Posts","PostsContainer","data","setData","shownData","setShownData","page","URL","pageURL","fetchPosts","count","res","fetch","json","itemsToShow","selectNItems","length","obj","n","slice","loadMorePosts","url","console","log","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,cAAT,GAA0B;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM,CAACS,IAAD,IAAST,QAAQ,CAAC,EAAD,CAAvB;AACA,QAAMU,GAAG,GAAG,0BAAZ;AACA,QAAMC,OAAO,GAAG,4BAAhB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAFQ,EAEN,CAACF,IAAD,CAFM,CAAT;;AAGA,iBAAeG,UAAf,CAA0BC,KAA1B,EAAiC;AAC/B,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,GAACG,KAAL,CAArB;AACA,QAAIG,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAjB;AACA,QAAIC,WAAW,GAAGC,YAAY,CAACF,IAAI,CAACX,IAAN,EAAWW,IAAI,CAACX,IAAL,CAAUc,MAArB,CAA9B;AACAX,IAAAA,YAAY,CAACS,WAAD,CAAZ;AACAX,IAAAA,OAAO,CAACU,IAAD,CAAP;AACD;;AACD,QAAME,YAAY,GAAG,CAACE,GAAD,EAAMC,CAAN,KAAY;AAC/B;AACA,WAAOD,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAaD,CAAb,CAAP;AACD,GAHD;;AAKA,QAAME,aAAa,GAAIC,GAAD,IAAS;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAIG,KAAK,GAAGf,UAAU,CAACY,GAAD,CAAtB;AACAhB,IAAAA,YAAY,CAACmB,KAAD,CAAZ;AACD,GAJD;;AAMA,sBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEJ,aAAa,CAAC,EAAD,CAFzB;AAGE,IAAA,OAAO,EAAElB,IAAI,IAAIE,SAAR,IAAqBF,IAAI,CAACc,MAAL,GAAcZ,SAAS,CAACY,MAHxD;AAIE,IAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJV;AAKE,IAAA,SAAS,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEZ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;;AAED,eAAeH,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Posts from \"./ContentLoading\";\n\nfunction PostsContainer() {\n  const [data, setData] = useState();\n  const [shownData, setShownData] = useState();\n  const [page] = useState([]);\n  const URL = \"http://api-v2.filmnet.ir\";\n  const pageURL = \"/widgets/home-page?count=5\";\n\n  useEffect(() => {\n    fetchPosts(pageURL);\n  }, [page]);\n  async function fetchPosts(count) {\n    let res = await fetch(URL+count);\n    let json = await res.json();\n    let itemsToShow = selectNItems(json.data,json.data.length);\n    setShownData(itemsToShow);\n    setData(json);\n  }\n  const selectNItems = (obj, n) => {\n    // console.log(obj);\n    return obj.slice(0, n);\n  };\n\n  const loadMorePosts = (url) => {\n    console.log(url);\n    let items = fetchPosts(url);\n    setShownData(items);\n  };\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMorePosts(\"\")}\n      hasMore={data && shownData && data.length > shownData.length}\n      loader={<div>Loading ...</div>}\n      useWindow={true}\n    >\n      <Posts posts={shownData} />\n    </InfiniteScroll>\n  );\n}\n\nexport default PostsContainer;\n"]},"metadata":{},"sourceType":"module"}