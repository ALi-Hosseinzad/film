{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/filter/fliterGroupingItems.jsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5)\n    }\n  }\n}));\nexport default function FliterGroupingItems() {\n  const classes = useStyles();\n  const [select, setSelect] = useState([]);\n\n  const handleClick = val => {\n    const {\n      options\n    } = val.target;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setSelect(value);\n  };\n\n  const arr = [\"فیلم تئاتر\", \"کودک و نوجوان\", \"فیلم کوتاه\", \"انیمیشن\", \"مستند\", \"داناشو \"];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, arr.map((item, index) => /*#__PURE__*/React.createElement(Chip, {\n    key: index,\n    variant: \"outlined\",\n    size: \"medium\",\n    label: item,\n    onClick: () => handleClick(index),\n    className: `filterBtn ${select === index ? \"filter-selected\" : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/filter/fliterGroupingItems.jsx"],"names":["React","useState","makeStyles","Chip","DoneIcon","useStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","FliterGroupingItems","classes","select","setSelect","handleClick","val","options","target","value","i","l","length","selected","push","arr","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJ,aAAS;AACPC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,GAAd;AADD;AAJL;AADiC,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,mBAAT,GAA+B;AAC5C,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMgB,WAAW,GAAIC,GAAD,IAAS;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAcD,GAAG,CAACE,MAAxB;AACA,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,IAAI,CAAhD,EAAmD;AACjD,UAAIH,OAAO,CAACG,CAAD,CAAP,CAAWG,QAAf,EAAyB;AACvBJ,QAAAA,KAAK,CAACK,IAAN,CAAWP,OAAO,CAACG,CAAD,CAAP,CAAWD,KAAtB;AACD;AACF;;AACDL,IAAAA,SAAS,CAACK,KAAD,CAAT;AACD,GATD;;AAUA,QAAMM,GAAG,GAAG,CACV,YADU,EAEV,eAFU,EAGV,YAHU,EAIV,SAJU,EAKV,OALU,EAMV,SANU,CAAZ;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoB,GAAG,CAACC,GAAJ,CAAQ,CAACC,IAAD,EAAOC,KAAP,kBACP,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAED,IAJT;AAKE,IAAA,OAAO,EAAE,MAAKZ,WAAW,CAACa,KAAD,CAL3B;AAME,IAAA,SAAS,EAAK,aAAYf,MAAM,KAAKe,KAAX,GAAmB,iBAAnB,GAAuC,IAAK,EANxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAcD","sourcesContent":["import React,{ useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function FliterGroupingItems() {\n  const classes = useStyles();\n  const [select, setSelect] = useState([]);\n\n  const handleClick = (val) => {\n    const { options } = val.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setSelect(value);\n  };\n  const arr = [\n    \"فیلم تئاتر\",\n    \"کودک و نوجوان\",\n    \"فیلم کوتاه\",\n    \"انیمیشن\",\n    \"مستند\",\n    \"داناشو \",\n  ];\n  return (\n    <div className={classes.root}>\n      {arr.map((item, index) => (\n        <Chip\n          key={index}\n          variant=\"outlined\"\n          size=\"medium\"\n          label={item}\n          onClick={() =>handleClick(index)}\n          className = {`filterBtn ${select === index ? \"filter-selected\" : null}`}\n        />\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}