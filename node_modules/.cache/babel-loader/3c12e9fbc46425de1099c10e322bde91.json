{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\"; // import InfiniteScroll from \"react-infinite-scroller\";\n\nconst FetchContent = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null\n  });\n\n  const loadMore = () => {\n    const apiUrl = `http://api-v2.filmnet.ir`;\n    useEffect(() => {\n      setAppState({\n        loading: true\n      });\n\n      if (setAppState.nextURL) {\n        fetch(apiUrl + setAppState.nextURL).then(res => res.json()).then(repos => {\n          setAppState({\n            loading: false,\n            repos: repos,\n            nextURL: repos.meta.next_url\n          });\n        });\n        return /*#__PURE__*/React.createElement(ListLoading, {\n          isLoading: appState.loading,\n          repos: appState.repos,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 16\n          }\n        });\n      } else {\n        const url = \"/widgets/home-page?count=5\";\n        fetch(apiUrl + url).then(res => res.json()).then(repos => {\n          setAppState({\n            loading: false,\n            repos: repos,\n            nextURL: repos.meta.next_url\n          });\n        });\n      }\n    }, [setAppState]);\n  };\n\n  return /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: appState.loading,\n    repos: appState.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default FetchContent;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","FetchContent","ListLoading","appState","setAppState","loading","repos","nextURL","loadMore","apiUrl","fetch","then","res","json","meta","next_url","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAGH,cAAc,CAACC,YAAD,CAAlC;AAEE,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACvCO,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAC;AAH+B,GAAD,CAAxC;;AAKF,QAAMC,QAAQ,GAAG,MAAI;AACnB,UAAMC,MAAM,GAAI,0BAAhB;AACAZ,IAAAA,SAAS,CAAC,MAAM;AACdO,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAX;;AACA,UAAGD,WAAW,CAACG,OAAf,EACA;AACEG,QAAAA,KAAK,CAACD,MAAM,GAAGL,WAAW,CAACG,OAAtB,CAAL,CACCI,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOL,KAAD,IAAW;AACfF,UAAAA,WAAW,CAAC;AAAEC,YAAAA,OAAO,EAAE,KAAX;AAAkBC,YAAAA,KAAK,EAAEA,KAAzB;AAAgCC,YAAAA,OAAO,EAACD,KAAK,CAACQ,IAAN,CAAWC;AAAnD,WAAD,CAAX;AACD,SAJD;AAKA,4BAAO,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAEZ,QAAQ,CAACE,OAAjC;AAA0C,UAAA,KAAK,EAAEF,QAAQ,CAACG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OARD,MASI;AACF,cAAMU,GAAG,GAAG,4BAAZ;AACAN,QAAAA,KAAK,CAACD,MAAM,GAAGO,GAAV,CAAL,CACGL,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESL,KAAD,IAAW;AACfF,UAAAA,WAAW,CAAC;AAAEC,YAAAA,OAAO,EAAE,KAAX;AAAkBC,YAAAA,KAAK,EAAEA,KAAzB;AAAgCC,YAAAA,OAAO,EAACD,KAAK,CAACQ,IAAN,CAAWC;AAAnD,WAAD,CAAX;AACD,SAJH;AAKD;AAEF,KApBQ,EAoBN,CAACX,WAAD,CApBM,CAAT;AAqBD,GAvBD;;AAyBA,sBAAO,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAED,QAAQ,CAACE,OAAjC;AAA0C,IAAA,KAAK,EAAEF,QAAQ,CAACG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlCD;;AAmCA,eAAeL,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\n// import InfiniteScroll from \"react-infinite-scroller\";\n\nconst FetchContent = () => {\n  const ListLoading = ContentLoading(ContentItems);\n    \n    const [appState, setAppState] = useState({\n      loading: false,\n      repos: null,\n      nextURL:null\n    });\n  const loadMore = ()=>{\n    const apiUrl = `http://api-v2.filmnet.ir`;\n    useEffect(() => {\n      setAppState({ loading: true });\n      if(setAppState.nextURL)\n      {\n        fetch(apiUrl + setAppState.nextURL)\n        .then((res) => res.json())\n        .then((repos) => {\n          setAppState({ loading: false, repos: repos, nextURL:repos.meta.next_url});\n        });\n        return <ListLoading isLoading={appState.loading} repos={appState.repos}/>;\n      }\n      else{\n        const url = \"/widgets/home-page?count=5\";\n        fetch(apiUrl + url)\n          .then((res) => res.json())\n          .then((repos) => {\n            setAppState({ loading: false, repos: repos, nextURL:repos.meta.next_url});\n          });\n      }\n     \n    }, [setAppState]);\n  }\n\n  return <ListLoading isLoading={appState.loading} repos={appState.repos}/>;\n};\nexport default FetchContent;\n"]},"metadata":{},"sourceType":"module"}