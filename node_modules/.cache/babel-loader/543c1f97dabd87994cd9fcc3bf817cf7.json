{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/11.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({\n    hasMore\n  });\n  const [next, setNext] = useState(\"\"); // useEffect(() => {\n  //   (async () => {\n  //     const realPage = page + 1;\n  //     const resp = await fetch(`${URL + pageURL}&page=${realPage}`);\n  //     const data = await resp.json();\n  //     setItems((prev) => [...prev, data]);\n  //     setHasMore(realPage * 10 <= data.data.len);\n  //     setNext(data.meta.next_url);\n  //   })();\n  // }, [page]);\n\n  function Fetch(url) {\n    (async () => {\n      const realPage = page + 1;\n      const resp = await fetch(`${URL + url}&page=${realPage}`); // const resp = await fetch(URL + url);\n\n      const data = await resp.json();\n      setItems(prev => [...prev, data]);\n      setHasMore(realPage * 10 <= data.data.len);\n    })();\n  }\n\n  useEffect(() => {\n    Fetch(pageURL);\n  }, [page]);\n\n  function FetchMore(url) {\n    url.map(item => {\n      console.log(item.meta.next_url); // Fetch(item.meta.next_url);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollerRef,\n    className: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: false,\n    repos: item,\n    key: index,\n    val: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), (setNext(data.meta.next_url, function () {\n    console.log(\"setState completed\", next);\n  }), FetchMore(items) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: loaderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 112\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 \")));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/11.jsx"],"names":["React","useState","useEffect","useCallback","ContentLoading","ContentItems","useInfiniteScroll","URL","pageURL","Example","ListLoading","items","setItems","hasMore","setHasMore","page","loaderRef","scrollerRef","next","setNext","Fetch","url","realPage","resp","fetch","data","json","prev","len","FetchMore","map","item","console","log","meta","next_url","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,MAAMC,GAAG,GAAG,0BAAZ;AACA,MAAMC,OAAO,GAAG,4BAAhB;AACA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,WAAW,GAAGN,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,IAAD,EAAOC,SAAP,EAAkBC,WAAlB,IAAiCX,iBAAiB,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAxD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC,CALgC,CAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASmB,KAAT,CAAeC,GAAf,EAAoB;AAClB,KAAC,YAAY;AACX,YAAMC,QAAQ,GAAGP,IAAI,GAAG,CAAxB;AACA,YAAMQ,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEjB,GAAG,GAAGc,GAAI,SAAQC,QAAS,EAA/B,CAAxB,CAFW,CAGX;;AACA,YAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAd,MAAAA,QAAQ,CAAEe,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUF,IAAV,CAAX,CAAR;AACAX,MAAAA,UAAU,CAACQ,QAAQ,GAAG,EAAX,IAAiBG,IAAI,CAACA,IAAL,CAAUG,GAA5B,CAAV;AAGD,KATD;AAUD;;AACD1B,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAACZ,OAAD,CAAL;AACD,GAFQ,EAEN,CAACO,IAAD,CAFM,CAAT;;AAGA,WAASc,SAAT,CAAmBR,GAAnB,EAAwB;AACtBA,IAAAA,GAAG,CAACS,GAAJ,CAASC,IAAD,IAAU;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUC,QAAtB,EADgB,CAEhB;AACD,KAHD;AAID;;AACD,sBACE;AAAK,IAAA,GAAG,EAAElB,WAAV;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACmB,GAAN,CAAU,CAACC,IAAD,EAAOK,KAAP,kBACT,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE,KAAxB;AAA+B,IAAA,KAAK,EAAEL,IAAtC;AAA4C,IAAA,GAAG,EAAEK,KAAjD;AAAwD,IAAA,GAAG,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,GAKGjB,OAAO,CAACM,IAAI,CAACS,IAAL,CAAUC,QAAX,EAAqB,YAAW;AAAEH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCf,IAAlC;AAAyC,GAA3E,CAAP,EAAoFW,SAAS,CAAClB,KAAD,CAAT,iBAAoB;AAAK,IAAA,GAAG,EAAEK,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAL3G,EADF;AAUD","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\n\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({ hasMore });\n  const [next, setNext] = useState(\"\");\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const realPage = page + 1;\n  //     const resp = await fetch(`${URL + pageURL}&page=${realPage}`);\n  //     const data = await resp.json();\n  //     setItems((prev) => [...prev, data]);\n  //     setHasMore(realPage * 10 <= data.data.len);\n  //     setNext(data.meta.next_url);\n  //   })();\n  // }, [page]);\n\n  function Fetch(url) {\n    (async () => {\n      const realPage = page + 1;\n      const resp = await fetch(`${URL + url}&page=${realPage}`);\n      // const resp = await fetch(URL + url);\n      const data = await resp.json();\n      setItems((prev) => [...prev, data]);\n      setHasMore(realPage * 10 <= data.data.len);\n      \n     \n    })();\n  }\n  useEffect(() => {\n    Fetch(pageURL);\n  }, [page]);\n  function FetchMore(url) {\n    url.map((item) => {\n      console.log(item.meta.next_url);\n      // Fetch(item.meta.next_url);\n    });\n  }\n  return (\n    <div ref={scrollerRef} className=\"1\">\n      {items.map((item, index) => (\n        <ListLoading isLoading={false} repos={item} key={index} val/>\n      ))}\n\n      {setNext(data.meta.next_url, function() { console.log(\"setState completed\", next) }),FetchMore(items) && <div ref={loaderRef}>دریافت موارد بیشتر </div>}\n      {/* {console.log(items)} */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}