{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/11.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({\n    hasMore\n  });\n  const [next, setNext] = useState([]);\n\n  async function Fetch(url) {\n    const realPage = page + 1;\n    const resp = await fetch(`${URL + url}&page=${realPage}`);\n    const data = await resp.json();\n    setItems(prev => [...prev, data]);\n    setHasMore(true);\n    setNext(prev => [...prev, data.meta.next_url]);\n  } // useEffect(() => {\n  //   // if (next) {\n  //   //   // console.log(next);\n  //   //   Fetch(next);\n  //   //   return;\n  //   // }\n  //   Fetch(pageURL);\n  // }, [page]);\n  // const selectNItems = (obj, n) => {\n  //   return obj.slice(0, n);\n  // };\n\n\n  async function FetchMore(props, prevPrpos) {\n    console.log(prevPrpos);\n    useEffect(() => {\n      Fetch(pageURL);\n      props.map((item, index) => {\n        prevPrpos.map(val => {\n          if (item.meta.next_url === prevPrpos) {\n            console.log(prevPrpos);\n            Fetch(prevPrpos);\n          }\n        });\n      });\n    }, [page]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollerRef,\n    className: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: false,\n    repos: item,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), FetchMore(items, next) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: loaderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 34\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 \"));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/11.jsx"],"names":["React","useState","useEffect","useCallback","ContentLoading","ContentItems","useInfiniteScroll","URL","pageURL","Example","ListLoading","items","setItems","hasMore","setHasMore","page","loaderRef","scrollerRef","next","setNext","Fetch","url","realPage","resp","fetch","data","json","prev","meta","next_url","FetchMore","props","prevPrpos","console","log","map","item","index","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,MAAMC,GAAG,GAAG,0BAAZ;AACA,MAAMC,OAAO,GAAG,4BAAhB;AACA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,WAAW,GAAGN,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,IAAD,EAAOC,SAAP,EAAkBC,WAAlB,IAAiCX,iBAAiB,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAxD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,iBAAemB,KAAf,CAAqBC,GAArB,EAA0B;AACxB,UAAMC,QAAQ,GAAGP,IAAI,GAAG,CAAxB;AACA,UAAMQ,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEjB,GAAG,GAAGc,GAAI,SAAQC,QAAS,EAA/B,CAAxB;AACA,UAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAd,IAAAA,QAAQ,CAAEe,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUF,IAAV,CAAX,CAAR;AACAX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,OAAO,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUF,IAAI,CAACG,IAAL,CAAUC,QAApB,CAAX,CAAP;AACD,GAd+B,CAehC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,iBAAeC,SAAf,CAAyBC,KAAzB,EAAgCC,SAAhC,EAA2C;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA9B,IAAAA,SAAS,CAAC,MAAM;AACdkB,MAAAA,KAAK,CAACZ,OAAD,CAAL;AACAuB,MAAAA,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzBL,QAAAA,SAAS,CAACG,GAAV,CAAeG,GAAD,IAAS;AACrB,cAAIF,IAAI,CAACR,IAAL,CAAUC,QAAV,KAAuBG,SAA3B,EAAsC;AACpCC,YAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAZ,YAAAA,KAAK,CAACY,SAAD,CAAL;AACD;AACF,SALD;AAMD,OAPD;AAQD,KAVQ,EAUN,CAACjB,IAAD,CAVM,CAAT;AAWD;;AACD,sBACE;AAAK,IAAA,GAAG,EAAEE,WAAV;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACwB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE,KAAxB;AAA+B,IAAA,KAAK,EAAED,IAAtC;AAA4C,IAAA,GAAG,EAAEC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAKGP,SAAS,CAACnB,KAAD,EAAQO,IAAR,CAAT,iBAA0B;AAAK,IAAA,GAAG,EAAEF,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAL7B,CADF;AAWD","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\n\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({ hasMore });\n  const [next, setNext] = useState([]);\n\n  async function Fetch(url) {\n    const realPage = page + 1;\n    const resp = await fetch(`${URL + url}&page=${realPage}`);\n    const data = await resp.json();\n    setItems((prev) => [...prev, data]);\n    setHasMore(true);\n    setNext((prev) => [...prev, data.meta.next_url]);\n  }\n  // useEffect(() => {\n  //   // if (next) {\n  //   //   // console.log(next);\n  //   //   Fetch(next);\n  //   //   return;\n  //   // }\n  //   Fetch(pageURL);\n  // }, [page]);\n\n  // const selectNItems = (obj, n) => {\n  //   return obj.slice(0, n);\n  // };\n  async function FetchMore(props, prevPrpos) {\n    console.log(prevPrpos);\n    useEffect(() => {\n      Fetch(pageURL);\n      props.map((item, index) => {\n        prevPrpos.map((val) => {\n          if (item.meta.next_url === prevPrpos) {\n            console.log(prevPrpos);\n            Fetch(prevPrpos);\n          }\n        });\n      });\n    }, [page]);\n  }\n  return (\n    <div ref={scrollerRef} className=\"1\">\n      {items.map((item, index) => (\n        <ListLoading isLoading={false} repos={item} key={index} />\n      ))}\n\n      {FetchMore(items, next) && <div ref={loaderRef}>دریافت موارد بیشتر </div>}\n\n      {/* {console.log(items)} */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}