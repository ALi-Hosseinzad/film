{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function App() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null,\n    hasMoreItems: true\n  });\n\n  function LoadMore(url) {\n    useEffect(() => {\n      getData();\n    }, [setState]);\n  } //   function InfiniteLis(url) {\n  //     useEffect(() => {\n  //       getData(url, setState);\n  //     }, [setState]);\n  //   }\n\n\n  function getData(page) {\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    const URL = apiurl + \"/widgets/home-page?count=5\";\n\n    if (state.nextURL) {\n      URL = apiurl + state.nextURL;\n    }\n\n    fetch(URL).then(res => res.json()).then(res => {\n      setState({\n        loading: false,\n        repos: res,\n        nextURL: res.meta.next_url\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: LoadMore.bind(),\n    hasMore: state.hasMoreItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: state.loading,\n    repos: state.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","App","ListLoading","state","setState","loading","repos","nextURL","hasMoreItems","LoadMore","url","getData","page","apiurl","URL","fetch","then","res","json","meta","next_url","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,KAAK,EAAE,IAF0B;AAGjCC,IAAAA,OAAO,EAAE,IAHwB;AAIjCC,IAAAA,YAAY,EAAE;AAJmB,GAAD,CAAlC;;AAQA,WAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrBd,IAAAA,SAAS,CAAC,MAAM;AACde,MAAAA,OAAO;AACR,KAFQ,EAEN,CAACP,QAAD,CAFM,CAAT;AAGD,GAd2B,CAe5B;AACA;AACA;AACA;AACA;;;AACA,WAASO,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,UAAMC,MAAM,GAAG,0BAAf;AACA,UAAMC,GAAG,GAAGD,MAAM,GAAG,4BAArB;;AACA,QAAIV,KAAK,CAACI,OAAV,EAAmB;AACjBO,MAAAA,GAAG,GAAGD,MAAM,GAAGV,KAAK,CAACI,OAArB;AACD;;AACDQ,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAAC;AACPC,QAAAA,OAAO,EAAE,KADF;AAEPC,QAAAA,KAAK,EAAEW,GAFA;AAGPV,QAAAA,OAAO,EAAEU,GAAG,CAACE,IAAJ,CAASC;AAHX,OAAD,CAAR;AAKD,KARH;AASD;;AACD,sBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEX,QAAQ,CAACY,IAAT,EAFZ;AAGE,IAAA,OAAO,EAAElB,KAAK,CAACK,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,KAAK,CAACE,OAA9B;AAAuC,IAAA,KAAK,EAAEF,KAAK,CAACG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function App() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null,\n    hasMoreItems: true,\n  });\n\n\n  function LoadMore(url) {\n    useEffect(() => {\n      getData();\n    }, [setState]);\n  }\n  //   function InfiniteLis(url) {\n  //     useEffect(() => {\n  //       getData(url, setState);\n  //     }, [setState]);\n  //   }\n  function getData(page) {\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    const URL = apiurl + \"/widgets/home-page?count=5\";\n    if (state.nextURL) {\n      URL = apiurl + state.nextURL;\n    }\n    fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n        setState({\n          loading: false,\n          repos: res,\n          nextURL: res.meta.next_url,\n        });\n      });\n  }\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={LoadMore.bind()}\n      hasMore={state.hasMoreItems}\n    >\n      <ListLoading isLoading={state.loading} repos={state.repos} />\n    </InfiniteScroll>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}