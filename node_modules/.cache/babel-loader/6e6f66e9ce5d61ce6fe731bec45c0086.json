{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/11.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({\n    hasMore\n  });\n  const [next, setNext] = useState(\"\"); // useEffect(() => {\n  //   (async () => {\n  //     const realPage = page + 1;\n  //     const resp = await fetch(`${URL + pageURL}&page=${realPage}`);\n  //     const data = await resp.json();\n  //     setItems((prev) => [...prev, data]);\n  //     setHasMore(realPage * 10 <= data.data.len);\n  //     setNext(data.meta.next_url);  \n  //   })();\n  // }, [page]);\n\n  function FetchMore(url) {\n    console.log(next);\n    useEffect(() => {\n      (async () => {\n        if (!url) {}\n\n        const realPage = page + 1;\n        const resp = await fetch(`${URL + url}&page=${realPage}`); // const resp = await fetch(URL + url);\n\n        const data = await resp.json();\n        setItems(prev => [...prev, data]);\n        setHasMore(realPage * 10 <= data.data.len);\n        setNext(data.meta.next_url);\n\n        if (!data.meta.next_url) {\n          setHasMore(false);\n        }\n      })();\n    }, [page]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollerRef,\n    className: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: false,\n    repos: item,\n    key: item.meta.remaining_items_count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), FetchMore(next) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: loaderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 \"));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/11.jsx"],"names":["React","useState","useEffect","ContentLoading","ContentItems","useInfiniteScroll","URL","pageURL","Example","ListLoading","items","setItems","hasMore","setHasMore","page","loaderRef","scrollerRef","next","setNext","FetchMore","url","console","log","realPage","resp","fetch","data","json","prev","len","meta","next_url","map","item","remaining_items_count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,MAAMC,GAAG,GAAG,0BAAZ;AACA,MAAMC,OAAO,GAAG,4BAAhB;AACA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,WAAW,GAAGN,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,IAAD,EAAOC,SAAP,EAAkBC,WAAlB,IAAiCX,iBAAiB,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAxD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC,CALgC,CAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASkB,SAAT,CAAmBC,GAAnB,EAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAf,IAAAA,SAAS,CAAC,MAAM;AACd,OAAC,YAAY;AACX,YAAG,CAACkB,GAAJ,EAEA,CAEC;;AACD,cAAMG,QAAQ,GAAGT,IAAI,GAAG,CAAxB;AACF,cAAMU,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEnB,GAAG,GAAGc,GAAI,SAAQG,QAAS,EAA/B,CAAxB,CAPa,CAQX;;AACA,cAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAhB,QAAAA,QAAQ,CAAEiB,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUF,IAAV,CAAX,CAAR;AACAb,QAAAA,UAAU,CAACU,QAAQ,GAAG,EAAX,IAAiBG,IAAI,CAACA,IAAL,CAAUG,GAA5B,CAAV;AACAX,QAAAA,OAAO,CAACQ,IAAI,CAACI,IAAL,CAAUC,QAAX,CAAP;;AACA,YAAI,CAACL,IAAI,CAACI,IAAL,CAAUC,QAAf,EAAwB;AACtBlB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OAhBD;AAiBD,KAlBQ,EAkBN,CAACC,IAAD,CAlBM,CAAT;AAmBD;;AACD,sBACE;AAAK,IAAA,GAAG,EAAEE,WAAV;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACsB,GAAN,CAAWC,IAAD,iBACT,oBAAC,WAAD;AACE,IAAA,SAAS,EAAE,KADb;AAEE,IAAA,KAAK,EAAEA,IAFT;AAGE,IAAA,GAAG,EAAEA,IAAI,CAACH,IAAL,CAAUI,qBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EASGf,SAAS,CAACF,IAAD,CAAT,iBAAmB;AAAK,IAAA,GAAG,EAAEF,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GATtB,CADF;AAcD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\n\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({ hasMore });\n  const [next, setNext] = useState(\"\");\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const realPage = page + 1;\n  //     const resp = await fetch(`${URL + pageURL}&page=${realPage}`);\n  //     const data = await resp.json();\n  //     setItems((prev) => [...prev, data]);\n  //     setHasMore(realPage * 10 <= data.data.len);\n  //     setNext(data.meta.next_url);  \n  //   })();\n  // }, [page]);\n\n  function FetchMore(url) {\n    console.log(next);\n    useEffect(() => {\n      (async () => {\n        if(!url)\n\n        {\n          \n        }\n        const realPage = page + 1;\n      const resp = await fetch(`${URL + url}&page=${realPage}`);\n        // const resp = await fetch(URL + url);\n        const data = await resp.json();\n        setItems((prev) => [...prev, data]);\n        setHasMore(realPage * 10 <= data.data.len);\n        setNext(data.meta.next_url);\n        if (!data.meta.next_url){\n          setHasMore(false);\n        }\n      })();\n    }, [page]);\n  }\n  return (\n    <div ref={scrollerRef} className=\"1\">\n      {items.map((item) => (\n        <ListLoading\n          isLoading={false}\n          repos={item}\n          key={item.meta.remaining_items_count}\n        />\n      ))}\n      \n      {FetchMore(next) && <div ref={loaderRef}>دریافت موارد بیشتر </div>}\n      {/* {console.log(next)} */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}