{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/ContentItems.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentHeader from \"./ContentHeader\";\nimport ContentImg from \"./ContentImg\";\nimport \"./ContentItem.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default\n  }\n}));\n\nconst ContetntItems = props => {\n  const [moreState, setMoreState] = useState({\n    loading: false,\n    repos: null,\n    url: null\n  });\n  const classes = useStyles(); // useEffect(() => {\n\n  const {\n    repos\n  } = props;\n  if (!repos || repos.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }\n  }, \"server don't responce , sorry\");\n  const val = Object.values(repos);\n  const baseURL = val[1].next_url;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: this.loadItems.bind(this),\n    hasMore: this.state.hasMoreItems,\n    loader: loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tracks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, items)), val.map(repo => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      className: \"content-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      key: repo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      style: {\n        boxShadow: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ContentHeader, Object.assign({}, repo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ContentImg, Object.assign({}, repo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    })))));\n  }));\n};\n\nexport default ContetntItems;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/ContentItems.jsx"],"names":["React","useEffect","useState","ContentHeader","ContentImg","makeStyles","Grid","Paper","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","primary","backgroundColor","background","default","ContetntItems","props","moreState","setMoreState","loading","repos","url","classes","length","val","Object","values","baseURL","next_url","loadItems","bind","state","hasMoreItems","loader","items","map","repo","boxShadow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentHeader from \"./ContentHeader\";\nimport ContentImg from \"./ContentImg\";\nimport \"./ContentItem.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default,\n  },\n}));\nconst ContetntItems = (props) => {\n  const [moreState, setMoreState] = useState({\n    loading: false,\n    repos: null,\n    url: null,\n  });\n  const classes = useStyles();\n  // useEffect(() => {\n    const { repos } = props;\n    if (!repos || repos.length === 0)\n      return <p>server don't responce , sorry</p>;\n    const val = Object.values(repos);\n    const baseURL = val[1].next_url;\n\n  \n  return (\n    <div className={classes.root}>\n    <InfiniteScroll\n                pageStart={0}\n                loadMore={this.loadItems.bind(this)}\n                hasMore={this.state.hasMoreItems}\n                loader={loader}>\n\n                <div className=\"tracks\">\n                    {items}\n                </div>\n            </InfiniteScroll>\n      {val.map((repo) => {\n        return (\n          <Grid container spacing={3} className=\"content-body\">\n            <Grid item xs={12} key={repo}>\n              <Paper className={classes.paper} style={{ boxShadow: \"none\" }}>\n                <ContentHeader {...repo} />\n                <ContentImg {...repo} />\n              </Paper>\n            </Grid>\n          </Grid>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ContetntItems;\n"]},"metadata":{},"sourceType":"module"}