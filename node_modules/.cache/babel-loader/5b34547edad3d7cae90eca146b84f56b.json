{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nconst FetchContent = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const apiUrl = `http://api-v2.filmnet.ir`;\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    hasMore: false,\n    url: \"/widgets/home-page?count=5\"\n  });\n  const [moreState, setMoreStast] = useState({\n    loading: false,\n    repos: null\n  });\n  useEffect(() => {\n    setAppState({\n      loading: true\n    });\n    fetch(apiUrl + appState.url).then(res => res.json()).then(repos => {\n      setAppState({\n        loading: false,\n        repos: repos\n      });\n      console.log(repos);\n    });\n  }, [setAppState]);\n  useEffect(() => {});\n\n  const fetchMore = (page = 0, pageCurrent = 1) => {\n    if (page !== pageCurrent) {\n      fetch(apiUrl + appState.repos.meta.next_url).then(res => res.json()).then(data => {\n        setAppState({\n          data: data\n        });\n        console.log(data);\n      });\n      return /*#__PURE__*/React.createElement(ListLoading, {\n        isLoading: appState.loading,\n        repos: appState.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: appState.loading,\n    repos: appState.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), fetchMore);\n};\n\nexport default FetchContent;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","FetchContent","ListLoading","apiUrl","appState","setAppState","loading","repos","hasMore","url","moreState","setMoreStast","fetch","then","res","json","console","log","fetchMore","page","pageCurrent","meta","next_url","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AACA,QAAMI,MAAM,GAAI,0BAAhB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAE,KAH8B;AAIvCC,IAAAA,GAAG,EAAE;AAJkC,GAAD,CAAxC;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC;AACzCS,IAAAA,OAAO,EAAE,KADgC;AAEzCC,IAAAA,KAAK,EAAE;AAFkC,GAAD,CAA1C;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AAEAM,IAAAA,KAAK,CAACT,MAAM,GAAGC,QAAQ,CAACK,GAAnB,CAAL,CACGI,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESN,KAAD,IAAW;AACfF,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEA;AAAzB,OAAD,CAAX;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,KALH;AAMD,GATQ,EASN,CAACF,WAAD,CATM,CAAT;AAWAT,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;;AACA,QAAMsB,SAAS,GAAG,CAACC,IAAI,GAAG,CAAR,EAAWC,WAAW,GAAG,CAAzB,KAA+B;AAC/C,QAAID,IAAI,KAAKC,WAAb,EAA0B;AACxBR,MAAAA,KAAK,CAACT,MAAM,GAAGC,QAAQ,CAACG,KAAT,CAAec,IAAf,CAAoBC,QAA9B,CAAL,CACGT,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESU,IAAD,IAAU;AACdlB,QAAAA,WAAW,CAAC;AACVkB,UAAAA,IAAI,EAAEA;AADI,SAAD,CAAX;AAGAP,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACD,OAPH;AAQA,0BAAO,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEnB,QAAQ,CAACE,OAAjC;AAA0C,QAAA,KAAK,EAAEF,QAAQ,CAACmB,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAZD;;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEnB,QAAQ,CAACE,OAAjC;AAA0C,IAAA,KAAK,EAAEF,QAAQ,CAACG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGW,SAFH,CADF;AAMD,CA5CD;;AA6CA,eAAejB,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nconst FetchContent = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const apiUrl = `http://api-v2.filmnet.ir`;\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    hasMore: false,\n    url: \"/widgets/home-page?count=5\",\n  });\n  const [moreState, setMoreStast] = useState({\n    loading: false,\n    repos: null,\n  });\n  useEffect(() => {\n    setAppState({ loading: true });\n\n    fetch(apiUrl + appState.url)\n      .then((res) => res.json())\n      .then((repos) => {\n        setAppState({ loading: false, repos: repos });\n        console.log(repos);\n      });\n  }, [setAppState]);\n\n  useEffect(() => {});\n  const fetchMore = (page = 0, pageCurrent = 1) => {\n    if (page !== pageCurrent) {\n      fetch(apiUrl + appState.repos.meta.next_url)\n        .then((res) => res.json())\n        .then((data) => {\n          setAppState({\n            data: data,\n          });\n          console.log(data);\n        });\n      return <ListLoading isLoading={appState.loading} repos={appState.data} />;\n    }\n  };\n  return (\n    <div>\n      <ListLoading isLoading={appState.loading} repos={appState.repos} />\n      {fetchMore}\n    </div>\n  );\n};\nexport default FetchContent;\n"]},"metadata":{},"sourceType":"module"}