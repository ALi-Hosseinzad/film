{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/11.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({\n    hasMore\n  }); // const [next, setNext] = useState([]);\n\n  async function Fetch(url) {\n    const realPage = page + 1;\n    const resp = await fetch(`${URL + url}&page=${realPage}`);\n    const data = await resp.json();\n    setItems(prev => [...prev, data]);\n    setHasMore(true); // setNext((pervUrl) => [...pervUrl, data.meta.next_url]);\n    // if (data.meta.next_url) {\n    //   const res = await fetch(`${URL + data.meta.next_url}&page=${realPage}`);\n    //   const dat = await res.json();\n    //   setItems((prev) => [...prev, dat]);\n    // }\n  }\n\n  useEffect(() => {\n    Fetch(pageURL);\n  }, [page]);\n\n  const selectNItems = (obj, n) => {\n    return obj.slice(0, n);\n  };\n\n  function FetchMore(props) {\n    props.map(item => {\n      selectNItems(item.data, item.data.length); //console.log(item.meta.next_url);\n\n      console.log(item.data.lenght);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollerRef,\n    className: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: false,\n    repos: item,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), FetchMore(items) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: loaderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 \"));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/11.jsx"],"names":["React","useState","useEffect","useCallback","ContentLoading","ContentItems","useInfiniteScroll","URL","pageURL","Example","ListLoading","items","setItems","hasMore","setHasMore","page","loaderRef","scrollerRef","Fetch","url","realPage","resp","fetch","data","json","prev","selectNItems","obj","n","slice","FetchMore","props","map","item","length","console","log","lenght","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,MAAMC,GAAG,GAAG,0BAAZ;AACA,MAAMC,OAAO,GAAG,4BAAhB;AACA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,WAAW,GAAGN,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,IAAD,EAAOC,SAAP,EAAkBC,WAAlB,IAAiCX,iBAAiB,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAxD,CAJgC,CAKhC;;AAEA,iBAAeK,KAAf,CAAqBC,GAArB,EAA0B;AACxB,UAAMC,QAAQ,GAAGL,IAAI,GAAG,CAAxB;AACA,UAAMM,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEf,GAAG,GAAGY,GAAI,SAAQC,QAAS,EAA/B,CAAxB;AACA,UAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAZ,IAAAA,QAAQ,CAAEa,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUF,IAAV,CAAX,CAAR;AACAT,IAAAA,UAAU,CAAC,IAAD,CAAV,CALwB,CAMxB;AACA;AACA;AACA;AACA;AACA;AACD;;AACDZ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAACV,OAAD,CAAL;AACD,GAFQ,EAEN,CAACO,IAAD,CAFM,CAAT;;AAIA,QAAMW,YAAY,GAAG,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC/B,WAAOD,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAaD,CAAb,CAAP;AACD,GAFD;;AAGD,WAASE,SAAT,CAAmBC,KAAnB,EAA0B;AACvBA,IAAAA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAClBP,MAAAA,YAAY,CAACO,IAAI,CAACV,IAAN,EAAYU,IAAI,CAACV,IAAL,CAAUW,MAAtB,CAAZ,CADkB,CAElB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACV,IAAL,CAAUc,MAAtB;AACD,KAJD;AAKD;;AACD,sBACE;AAAK,IAAA,GAAG,EAAEpB,WAAV;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOK,KAAP,kBACT,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE,KAAxB;AAA+B,IAAA,KAAK,EAAEL,IAAtC;AAA4C,IAAA,GAAG,EAAEK,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAKGR,SAAS,CAACnB,KAAD,CAAT,iBAAoB;AAAK,IAAA,GAAG,EAAEK,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GALvB,CADF;AAUD","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from \"@closeio/use-infinite-scroll\";\n\nconst URL = \"http://api-v2.filmnet.ir\";\nconst pageURL = \"/widgets/home-page?count=5\";\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({ hasMore });\n  // const [next, setNext] = useState([]);\n\n  async function Fetch(url) {\n    const realPage = page + 1;\n    const resp = await fetch(`${URL + url}&page=${realPage}`);\n    const data = await resp.json();\n    setItems((prev) => [...prev, data]);\n    setHasMore(true);\n    // setNext((pervUrl) => [...pervUrl, data.meta.next_url]);\n    // if (data.meta.next_url) {\n    //   const res = await fetch(`${URL + data.meta.next_url}&page=${realPage}`);\n    //   const dat = await res.json();\n    //   setItems((prev) => [...prev, dat]);\n    // }\n  }\n  useEffect(() => {\n    Fetch(pageURL);\n  }, [page]);\n\n  const selectNItems = (obj, n) => {\n    return obj.slice(0, n);\n  };\n function FetchMore(props) {\n    props.map((item) => {\n      selectNItems(item.data, item.data.length);\n      //console.log(item.meta.next_url);\n      console.log(item.data.lenght);\n    });\n  }\n  return (\n    <div ref={scrollerRef} className=\"1\">\n      {items.map((item, index) => (\n        <ListLoading isLoading={false} repos={item} key={index} />\n      ))}\n\n      {FetchMore(items) && <div ref={loaderRef}>دریافت موارد بیشتر </div>}\n      {/* {console.log(items)} */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}