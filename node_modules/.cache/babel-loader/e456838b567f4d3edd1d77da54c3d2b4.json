{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useReducer } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MainSlide from \"./../slide/mainData\";\nimport Card from \"./../card/card\";\nimport \"./FetchContent.css\";\nimport NavBar from \"../navBar/NavBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"../footer/footer\";\nimport Scroll from '../scroll/Scroll';\nimport Filter from \"../filter/filter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default\n  }\n}));\n\nconst FetchItems = () => {\n  const classes = useStyles();\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    data: [],\n    count: 0,\n    hasMore: true,\n    loading: false\n  });\n  useEffect(() => {\n    function getData(number) {\n      var URL = apiurl + number + \"&count=5\"; //setLoadeing(true)\n\n      fetch(URL).then(res => res.json()).then(res => {\n        if (state.count < res.meta.total_items_count) {\n          setState({\n            loading: false\n          });\n          setState({\n            data: prev => [...prev, res]\n          });\n        } else {\n          setState({\n            hasMore: false\n          });\n        }\n      });\n    }\n\n    getData(state.count);\n  }, [state.count]);\n  const arr = state.data.map((items, index) => {\n    if (index === 0) {\n      return /*#__PURE__*/React.createElement(MainSlide, {\n        val: items.data,\n        key: index + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Scroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, arr), /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    className: \"scroll\",\n    dataLength: state.count,\n    next: () => setState({\n      count: prevCount => prevCount + 5\n    }),\n    hasMore: state.hasMore // val={console.log(count)}\n    ,\n    loader: /*#__PURE__*/React.createElement(\"p\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 ...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, state.data.map((item, index) => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: state.loading,\n    repos: item,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default FetchItems;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useReducer","ContentLoading","ContentItems","InfiniteScroll","MainSlide","Card","NavBar","makeStyles","Grid","Paper","Footer","Scroll","Filter","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","primary","backgroundColor","background","default","FetchItems","classes","apiurl","ListLoading","state","setState","newState","data","count","hasMore","loading","getData","number","URL","fetch","then","res","json","meta","total_items_count","prev","arr","map","items","index","prevCount","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MainSlide from \"./../slide/mainData\";\nimport Card from \"./../card/card\";\nimport \"./FetchContent.css\";\nimport NavBar from \"../navBar/NavBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"../footer/footer\";\nimport Scroll from '../scroll/Scroll'; \nimport Filter from \"../filter/filter\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default,\n  },\n}));\nconst FetchItems = () => {\n  const classes = useStyles();\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n\n  const [state, setState] = useReducer(\n    (state, newState) => ({...state, ...newState}),{\n      data:[],\n      count:0,\n      hasMore:true,\n      loading:false\n  });\n  useEffect(() => {\n    function getData(number) {\n      var URL = apiurl + number + \"&count=5\";\n      //setLoadeing(true)\n      fetch(URL)\n        .then((res) => res.json())\n        .then((res) => {\n          if (state.count < res.meta.total_items_count) {\n            setState({loading:false})\n            setState({data:(prev) => [...prev, res]});\n          } else {\n            setState({ hasMore:false});\n          }\n        });\n    }\n    getData(state.count);\n  }, [state.count]);\n\n  const arr = state.data.map((items, index) => {\n    if (index === 0) {\n      return <MainSlide val={items.data} key={index + 1} />;\n    } else {\n      return null;\n    }\n  });\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Filter />\n            <Scroll />\n            <div>{arr}</div>\n            <NavBar />\n            <Card />\n            <InfiniteScroll\n              className=\"scroll\"\n              dataLength={state.count}\n              next={() => setState({count:(prevCount) => prevCount + 5})}\n              hasMore={state.hasMore}\n              // val={console.log(count)}\n              loader={<p className=\"loader\">دریافت موارد بیشتر ...</p>}\n            >\n              {state.data.map((item, index) => (\n                <ListLoading isLoading={state.loading} repos={item} key={index} />\n              ))}\n            </InfiniteScroll>\n            <Footer />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default FetchItems;\n"]},"metadata":{},"sourceType":"module"}