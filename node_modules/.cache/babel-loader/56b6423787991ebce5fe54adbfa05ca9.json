{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/ContentItems.jsx\";\nimport React from \"react\";\nimport ContentHeader from \"./ContentHeader\";\nimport ContentImg from \"./ContentImg\";\nimport \"./ContentItem.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nconst ContetntItems = props => {\n  const {\n    repos\n  } = props;\n  if (!repos || repos.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 44\n    }\n  }, \"server don't responce , sorry\");\n  const val = Object.values(repos);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: \"content-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, val.map(repo => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      key: repo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ContentHeader, Object.assign({}, repo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ContentImg, Object.assign({}, repo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    })));\n  })));\n};\n\nexport default ContetntItems;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/ContentItems.jsx"],"names":["React","ContentHeader","ContentImg","makeStyles","Grid","useStyles","theme","root","flexGrow","ContetntItems","props","repos","length","val","Object","values","classes","map","repo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADiC,CAAZ,CAAD,CAA5B;;AAKA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,MAAI,CAACC,KAAD,IAAUA,KAAK,CAACC,MAAN,KAAiB,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AAClC,QAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcJ,KAAd,CAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,GAAG,CAACI,GAAJ,CAAQC,IAAI,IAAI;AACf,wBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,GAAG,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD,oBAAmBA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE,oBAAC,UAAD,oBAAgBA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AAMD,GAPA,CADH,CADA,CADF;AAcD,CAnBD;;AAqBA,eAAeT,aAAf","sourcesContent":["import React from \"react\";\nimport ContentHeader from \"./ContentHeader\";\nimport ContentImg from \"./ContentImg\";\nimport \"./ContentItem.css\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\nconst ContetntItems = (props) => {\n  const { repos } = props;\n\n  if (!repos || repos.length === 0) return <p>server don't responce , sorry</p>;\n  const val = Object.values(repos);\n  return (\n    <div className={classes.root}>\n    <Grid container spacing={3} className=\"content-body\" >\n      {val.map(repo => {\n        return (\n          <Grid item xs={12} key={repo}>\n            <ContentHeader {...repo} />\n            <ContentImg {...repo} />\n          </Grid>\n        );\n      })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ContetntItems;\n"]},"metadata":{},"sourceType":"module"}