{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/login/login.jsx\";\nimport React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport \"../../components/navBar/navBar.css\";\nimport { facebookConfig, googleConfig } from \"./social-config\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      loggedIn: null,\n      loading: false,\n      error: null,\n      initialTab: null,\n      recoverPasswordSuccess: null\n    };\n  }\n\n  onLogin() {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!email || !password) {\n      this.setState({\n        error: true\n      });\n    } else {\n      this.onLoginSuccess('form');\n    }\n  }\n\n  onRegister() {\n    const login = document.querySelector('#login').value;\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!login || !email || !password) {\n      this.setState({\n        error: true\n      });\n    } else {\n      this.onLoginSuccess('form');\n    }\n  }\n\n  onRecoverPassword() {\n    console.log('__onFotgottenPassword__');\n    console.log('email: ' + document.querySelector('#email').value);\n    const email = document.querySelector('#email').value;\n\n    if (!email) {\n      this.setState({\n        error: true,\n        recoverPasswordSuccess: false\n      });\n    } else {\n      this.setState({\n        error: null,\n        recoverPasswordSuccess: true\n      });\n    }\n  }\n\n  openModal(initialTab) {\n    this.setState({\n      initialTab: initialTab\n    }, () => {\n      this.setState({\n        showModal: true\n      });\n    });\n  }\n\n  onLoginSuccess(method, response) {\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    });\n  }\n\n  onLoginFail(method, response) {\n    this.setState({\n      loading: false,\n      error: response\n    });\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null,\n      recoverPasswordSuccess: false\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n\n  render() {\n    const loggedIn = this.state.loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"You are signed in with: \", this.state.loggedIn)) : null;\n    const isLoading = this.state.loading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navBarBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Btn\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 / \\u0648\\u0631\\u0648\\u062F\"), /*#__PURE__*/React.createElement(ReactModalLogin, {\n      visible: this.state.showModal,\n      onCloseModal: this.closeModal.bind(this),\n      loading: isLoading,\n      initialTab: this.state.initialTab,\n      error: this.state.error,\n      tabs: {\n        afterChange: this.afterTabsChange.bind(this)\n      },\n      startLoading: this.startLoading.bind(this),\n      finishLoading: this.finishLoading.bind(this),\n      form: {\n        onLogin: this.onLogin.bind(this),\n        onRegister: this.onRegister.bind(this),\n        onRecoverPassword: this.onRecoverPassword.bind(this),\n        recoverPasswordSuccessLabel: this.state.recoverPasswordSuccess ? {\n          label: \"New password has been sent to your mailbox!\"\n        } : null,\n        recoverPasswordAnchor: {\n          label: \"Forgot your password?\"\n        },\n        loginBtn: {\n          label: \"Sign in\"\n        },\n        registerBtn: {\n          label: \"Sign up\"\n        },\n        recoverPasswordBtn: {\n          label: \"Send new password\"\n        },\n        loginInputs: [{\n          containerClass: 'RML-form-group',\n          label: 'Email',\n          type: 'email',\n          inputClass: 'RML-form-control',\n          id: 'email',\n          name: 'email',\n          placeholder: 'Email'\n        }, {\n          containerClass: 'RML-form-group',\n          label: 'Password',\n          type: 'password',\n          inputClass: 'RML-form-control',\n          id: 'password',\n          name: 'password',\n          placeholder: 'Password'\n        }],\n        registerInputs: [{\n          containerClass: 'RML-form-group',\n          label: 'Nickname',\n          type: 'text',\n          inputClass: 'RML-form-control',\n          id: 'login',\n          name: 'login',\n          placeholder: 'Nickname'\n        }, {\n          containerClass: 'RML-form-group',\n          label: 'Email',\n          type: 'email',\n          inputClass: 'RML-form-control',\n          id: 'email',\n          name: 'email',\n          placeholder: 'Email'\n        }, {\n          containerClass: 'RML-form-group',\n          label: 'Password',\n          type: 'password',\n          inputClass: 'RML-form-control',\n          id: 'password',\n          name: 'password',\n          placeholder: 'Password'\n        }],\n        recoverPasswordInputs: [{\n          containerClass: 'RML-form-group',\n          label: 'Email',\n          type: 'email',\n          inputClass: 'RML-form-control',\n          id: 'email',\n          name: 'email',\n          placeholder: 'Email'\n        }]\n      },\n      separator: {\n        label: \"or\"\n      },\n      providers: {\n        facebook: {\n          config: facebookConfig,\n          onLoginSuccess: this.onLoginSuccess.bind(this),\n          onLoginFail: this.onLoginFail.bind(this),\n          inactive: isLoading,\n          label: \"Continue with Facebook\"\n        },\n        google: {\n          config: googleConfig,\n          onLoginSuccess: this.onLoginSuccess.bind(this),\n          onLoginFail: this.onLoginFail.bind(this),\n          inactive: isLoading,\n          label: \"Continue with Google\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), loggedIn);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/login/login.jsx"],"names":["React","ReactModalLogin","facebookConfig","googleConfig","Login","Component","constructor","props","state","showModal","loggedIn","loading","error","initialTab","recoverPasswordSuccess","onLogin","email","document","querySelector","value","password","setState","onLoginSuccess","onRegister","login","onRecoverPassword","console","log","openModal","method","response","closeModal","onLoginFail","startLoading","finishLoading","afterTabsChange","render","isLoading","bind","afterChange","recoverPasswordSuccessLabel","label","recoverPasswordAnchor","loginBtn","registerBtn","recoverPasswordBtn","loginInputs","containerClass","type","inputClass","id","name","placeholder","registerInputs","recoverPasswordInputs","facebook","config","inactive","google"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport \"../../components/navBar/navBar.css\"\nimport { facebookConfig, googleConfig } from \"./social-config\";\n \nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      showModal: false,\n      loggedIn: null,\n      loading: false,\n      error: null,\n      initialTab: null,\n      recoverPasswordSuccess: null,\n    };\n\n  }\n  onLogin() {\n\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!email || !password) {\n      this.setState({\n        error: true\n      })\n    } else {\n      this.onLoginSuccess('form');\n    }\n  }\n\n  onRegister() {\n  \n    const login = document.querySelector('#login').value;\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!login || !email || !password) {\n      this.setState({\n        error: true\n      })\n    } else {\n      this.onLoginSuccess('form');\n    }\n  }\n\n  onRecoverPassword() {\n    console.log('__onFotgottenPassword__');\n    console.log('email: ' + document.querySelector('#email').value);\n\n    const email = document.querySelector('#email').value;\n\n\n    if (!email) {\n      this.setState({\n        error: true,\n        recoverPasswordSuccess: false\n      })\n    } else {\n      this.setState({\n        error: null,\n        recoverPasswordSuccess: true\n      });\n    }\n  }\n  openModal(initialTab) {\n    this.setState({\n      initialTab: initialTab\n    }, () => {\n      this.setState({\n        showModal: true,\n      })\n    });\n  }\n\n  onLoginSuccess(method, response) {\n\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    })\n  }\n\n  onLoginFail(method, response) {\n\n    this.setState({\n      loading: false,\n      error: response\n    })\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    })\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    })\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null,\n      recoverPasswordSuccess: false,\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n \n  render() {\n    const loggedIn = this.state.loggedIn\n      ? <div>\n          <p>You are signed in with: {this.state.loggedIn}</p>\n        </div>\n      : null;\n      const isLoading = this.state.loading;\n    return (\n      <div className=\"navBarBtn\">\n        <button  className=\"Btn\" onClick={() => this.openModal()}>ثبت نام / ورود</button>\n \n        <ReactModalLogin\n          visible={this.state.showModal}\n          onCloseModal={this.closeModal.bind(this)}\n          loading={isLoading}\n          initialTab={this.state.initialTab}\n          error={this.state.error}\n          tabs={{\n            afterChange: this.afterTabsChange.bind(this)\n          }}\n          startLoading={this.startLoading.bind(this)}\n          finishLoading={this.finishLoading.bind(this)}\n          form={{\n            onLogin: this.onLogin.bind(this),\n            onRegister: this.onRegister.bind(this),\n            onRecoverPassword: this.onRecoverPassword.bind(this),\n\n            recoverPasswordSuccessLabel: this.state.recoverPasswordSuccess\n              ? {\n                  label: \"New password has been sent to your mailbox!\"\n                }\n              : null,\n            recoverPasswordAnchor: {\n              label: \"Forgot your password?\"\n            },\n            loginBtn: {\n              label: \"Sign in\"\n            },\n            registerBtn: {\n              label: \"Sign up\"\n            },\n            recoverPasswordBtn: {\n              label: \"Send new password\"\n            },\n            loginInputs: [\n              {\n                containerClass: 'RML-form-group',\n                label: 'Email',\n                type: 'email',\n                inputClass: 'RML-form-control',\n                id: 'email',\n                name: 'email',\n                placeholder: 'Email',\n              },\n              {\n                containerClass: 'RML-form-group',\n                label: 'Password',\n                type: 'password',\n                inputClass: 'RML-form-control',\n                id: 'password',\n                name: 'password',\n                placeholder: 'Password',\n              }\n            ],\n            registerInputs: [\n              {\n                containerClass: 'RML-form-group',\n                label: 'Nickname',\n                type: 'text',\n                inputClass: 'RML-form-control',\n                id: 'login',\n                name: 'login',\n                placeholder: 'Nickname',\n              },\n              {\n                containerClass: 'RML-form-group',\n                label: 'Email',\n                type: 'email',\n                inputClass: 'RML-form-control',\n                id: 'email',\n                name: 'email',\n                placeholder: 'Email',\n              },\n              {\n                containerClass: 'RML-form-group',\n                label: 'Password',\n                type: 'password',\n                inputClass: 'RML-form-control',\n                id: 'password',\n                name: 'password',\n                placeholder: 'Password',\n              }\n            ],\n            recoverPasswordInputs: [\n              {\n                containerClass: 'RML-form-group',\n                label: 'Email',\n                type: 'email',\n                inputClass: 'RML-form-control',\n                id: 'email',\n                name: 'email',\n                placeholder: 'Email',\n              },\n            ],\n          }}\n          separator={{\n            label: \"or\"\n          }}\n          providers={{\n            facebook: {\n              config: facebookConfig,\n              onLoginSuccess: this.onLoginSuccess.bind(this),\n              onLoginFail: this.onLoginFail.bind(this),\n              inactive: isLoading,\n              label: \"Continue with Facebook\"\n            },\n            google: {\n              config: googleConfig,\n              onLoginSuccess: this.onLoginSuccess.bind(this),\n              onLoginFail: this.onLoginFail.bind(this),\n              inactive: isLoading,\n              label: \"Continue with Google\"\n            }\n          }}\n        />\n        {loggedIn}\n      </div>\n    )\n  }\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}