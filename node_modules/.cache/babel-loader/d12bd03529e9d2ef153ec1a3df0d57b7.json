{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function Test() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    nextURL: null,\n    hasMoreItems: true\n  });\n  const [Url, setUrl] = useState([]);\n  useEffect(() => {\n    getData(\"/widgets/home-page?count=5\");\n  }, []);\n\n  function loadMore(url) {\n    //console.log(url);\n    //const array2 = url;\n    //url = url.filter(val => !array2.includes(val));\n    console.log(url, \"-------\");\n\n    const allEqual = arr => arr.every(v => v === arr[0]);\n\n    if (allEqual(url)) {\n      url = url.shift(); //getData(\"/widgets/home-page?offset=5&count=5\");\n    } // for (let index = 0; index < url.length; index++) {\n    //   const element = url[index];\n    //   console.log(element);\n    //   if (element === url[index]){\n    //     console.log(url[index]);\n    //     return url[index]\n    //   }\n    // }\n    //setUrl(url);\n    //\n\n  }\n\n  var i = 0;\n\n  function getData(url) {\n    i++;\n    console.log(i);\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    var URL = apiurl + url;\n    fetch(URL).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.meta.next_url) {\n        setState({\n          loading: false,\n          repos: res,\n          nextURL: res.meta.next_url\n        });\n      } else {\n        setState({\n          hasMoreItems: false\n        });\n      }\n\n      setUrl(prev => [...prev, res.meta.next_url]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: loadMore(Url),\n    hasMore: state.hasMoreItems,\n    val: console.log(state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: state.loading,\n    repos: state.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","Test","ListLoading","state","setState","loading","repos","nextURL","hasMoreItems","Url","setUrl","getData","loadMore","url","console","log","allEqual","arr","every","v","shift","i","apiurl","URL","fetch","then","res","json","meta","next_url","prev"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,OAAO,EAAE,IAHwB;AAIjCC,IAAAA,YAAY,EAAE;AAJmB,GAAD,CAAlC;AAMA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAAC,4BAAD,CAAP;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIA,WAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,SAAjB;;AACA,UAAMG,QAAQ,GAAGC,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAWC,CAAC,IAAIA,CAAC,KAAKF,GAAG,CAAC,CAAD,CAAzB,CAAxB;;AACA,QAAGD,QAAQ,CAACH,GAAD,CAAX,EAAiB;AACfA,MAAAA,GAAG,GAAIA,GAAG,CAACO,KAAJ,EAAP,CADe,CAEf;AACD,KAToB,CAUrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AAED,MAAIC,CAAC,GAAE,CAAP;;AACA,WAASV,OAAT,CAAiBE,GAAjB,EAAsB;AACpBQ,IAAAA,CAAC;AACDP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACA,UAAMC,MAAM,GAAG,0BAAf;AACA,QAAIC,GAAG,GAAGD,MAAM,GAAGT,GAAnB;AACAW,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;;AACA,UAAIA,GAAG,CAACE,IAAJ,CAASC,QAAb,EAAuB;AACrBzB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,OAAO,EAAE,KADF;AAEPC,UAAAA,KAAK,EAAEoB,GAFA;AAGPnB,UAAAA,OAAO,EAAEmB,GAAG,CAACE,IAAJ,CAASC;AAHX,SAAD,CAAR;AAOD,OARD,MAQO;AACLzB,QAAAA,QAAQ,CAAC;AACPI,UAAAA,YAAY,EAAE;AADP,SAAD,CAAR;AAGD;;AACDE,MAAAA,MAAM,CAAEoB,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAASJ,GAAG,CAACE,IAAJ,CAASC,QAAlB,CAAT,CAAN;AACD,KAlBH;AAmBD;;AACD,sBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEjB,QAAQ,CAACH,GAAD,CAFpB;AAGE,IAAA,OAAO,EAAEN,KAAK,CAACK,YAHjB;AAKE,IAAA,GAAG,EAAEM,OAAO,CAACC,GAAR,CAAYZ,KAAZ,CALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEA,KAAK,CAACE,OAA9B;AAAuC,IAAA,KAAK,EAAEF,KAAK,CAACG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nexport default function Test() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    nextURL: null,\n    hasMoreItems: true,\n  });\n  const [Url, setUrl] = useState([]);\n\n  useEffect(() => {\n    getData(\"/widgets/home-page?count=5\");\n  },[]);\n\n  function loadMore(url) {\n    //console.log(url);\n    //const array2 = url;\n    //url = url.filter(val => !array2.includes(val));\n    console.log(url, \"-------\");\n    const allEqual = arr => arr.every( v => v === arr[0] )\n    if(allEqual(url)){\n      url =  url.shift();\n      //getData(\"/widgets/home-page?offset=5&count=5\");\n    }\n    // for (let index = 0; index < url.length; index++) {\n    //   const element = url[index];\n    //   console.log(element);\n    //   if (element === url[index]){\n    //     console.log(url[index]);\n    //     return url[index]\n    //   }\n    // }\n    //setUrl(url);\n    //\n  }\n\n  var i =0\n  function getData(url) {\n    i++;\n    console.log(i);\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    var URL = apiurl + url;\n    fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        if (res.meta.next_url) {\n          setState({\n            loading: false,\n            repos: res,\n            nextURL: res.meta.next_url,\n          });\n\n\n        } else {\n          setState({\n            hasMoreItems: false,\n          });\n        }\n        setUrl((prev)=>[...prev,res.meta.next_url])\n      });\n  }\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore(Url)}\n      hasMore={state.hasMoreItems}\n        \n      val={console.log(state)}\n    >\n      <ListLoading isLoading={state.loading} repos={state.repos} />\n    </InfiniteScroll>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}