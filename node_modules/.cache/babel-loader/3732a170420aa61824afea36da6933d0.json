{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function Test({\n  onSetRepos,\n  repos = [],\n  onSetNext,\n  next\n}) {\n  console.log(next);\n  const ListLoading = ContentLoading(ContentItems); // const [state, setState] = useState({\n  //   ,\n  //   repos: [],\n  //   nextURL: null,\n  //   hasMoreItems: true,\n  // });\n  //const [Url, setUrl] = useState([]);\n\n  useEffect(() => {\n    console.log(\"object\");\n    getData(\"/widgets/home-page?count=5\");\n  }, []); // function loadMore(url) {\n  //   //console.log(url);\n  //   //const array2 = url;\n  //   //url = url.filter(val => !array2.includes(val));\n  //   console.log(url, \"-------\");\n  //   // const allEqual = arr => arr.every( v => v === arr[0] )\n  //   // if(allEqual(url)){\n  //     // url =  url.shift();\n  //     //getData(\"/widgets/home-page?offset=5&count=5\");\n  //   // }\n  //   // for (let index = 0; index < url.length; index++) {\n  //   //   const element = url[index];\n  //   //   console.log(element);\n  //   //   if (element === url[index]){\n  //   //     console.log(url[index]);\n  //   //     return url[index]\n  //   //   }\n  //   // }\n  //   //setUrl(url);\n  //   //\n  // }\n\n  var i = 0;\n\n  async function getData(url) {\n    i++;\n    console.log(i);\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    var URL = apiurl + url;\n    await fetch(URL).then(res => res.json()).then(res => {\n      onSetRepos(res);\n      onSetNext(res.meta.next_url); // console.log(res);\n      // if (res.meta.next_url) {\n      //   setState({\n      //     loading: false,\n      //     repos: res,\n      //     nextURL: res.meta.next_url,\n      //   });\n      // } else {\n      //   setState({\n      //     hasMoreItems: false,\n      //   });\n      // }\n      // setUrl((prev)=>[...prev,res.meta.next_url])\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"700px\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    initialLoad: false,\n    threshold: 700,\n    loadMore: getData(next),\n    hasMore: true // val={console.log(state)}\n    ,\n    useWindow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: false,\n    repos: repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","Test","onSetRepos","repos","onSetNext","next","console","log","ListLoading","getData","i","url","apiurl","URL","fetch","then","res","json","meta","next_url","height","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACC,OAAOC,YAAP,MAAyB,gBAAzB;AACD,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,UAAD;AAAYC,EAAAA,KAAK,GAAC,EAAlB;AAAqBC,EAAAA,SAArB;AAA+BC,EAAAA;AAA/B,CAAd,EAAqD;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,WAAW,GAAGV,cAAc,CAACC,YAAD,CAAlC,CAFkE,CAGlE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAE,IAAAA,OAAO,CAAC,4BAAD,CAAP;AACD,GAHQ,EAGP,EAHO,CAAT,CAXkE,CAgBlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,CAAC,GAAG,CAAR;;AACA,iBAAeD,OAAf,CAAuBE,GAAvB,EAA4B;AAC1BD,IAAAA,CAAC;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACA,UAAME,MAAM,GAAG,0BAAf;AACA,QAAIC,GAAG,GAAGD,MAAM,GAAGD,GAAnB;AACA,UAAMG,KAAK,CAACD,GAAD,CAAL,CACHE,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGC,GAAD,IAAS;AACbd,MAAAA,UAAU,CAACc,GAAD,CAAV;AACAZ,MAAAA,SAAS,CAACY,GAAG,CAACE,IAAJ,CAASC,QAAV,CAAT,CAFa,CAGd;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAlBG,CAAN;AAmBD;;AACD,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,WAAW,EAAE,KAFf;AAGE,IAAA,SAAS,EAAE,GAHb;AAIC,IAAA,QAAQ,EAAEZ,OAAO,CAACJ,IAAD,CAJlB;AAKE,IAAA,OAAO,EAAE,IALX,CAME;AANF;AAOE,IAAA,SAAS,EAAE,IAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE,KAAxB;AAA+B,IAAA,KAAK,EAAEF,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAeD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\n import ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nexport default function Test({onSetRepos,repos=[],onSetNext,next,}) {\n  console.log(next);\n  const ListLoading = ContentLoading(ContentItems);\n  // const [state, setState] = useState({\n  //   ,\n  //   repos: [],\n  //   nextURL: null,\n  //   hasMoreItems: true,\n  // });\n  //const [Url, setUrl] = useState([]);\n\n  useEffect(() => {\n    console.log(\"object\");\n    getData(\"/widgets/home-page?count=5\");\n  },[]);\n\n  // function loadMore(url) {\n  //   //console.log(url);\n  //   //const array2 = url;\n  //   //url = url.filter(val => !array2.includes(val));\n  //   console.log(url, \"-------\");\n  //   // const allEqual = arr => arr.every( v => v === arr[0] )\n  //   // if(allEqual(url)){\n  //     // url =  url.shift();\n  //     //getData(\"/widgets/home-page?offset=5&count=5\");\n  //   // }\n  //   // for (let index = 0; index < url.length; index++) {\n  //   //   const element = url[index];\n  //   //   console.log(element);\n  //   //   if (element === url[index]){\n  //   //     console.log(url[index]);\n  //   //     return url[index]\n  //   //   }\n  //   // }\n  //   //setUrl(url);\n  //   //\n  // }\n\n  var i = 0;\n  async function getData(url) {\n    i++;\n    console.log(i);\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    var URL = apiurl + url;\n    await fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n        onSetRepos(res);\n        onSetNext(res.meta.next_url);\n       // console.log(res);\n        // if (res.meta.next_url) {\n        //   setState({\n        //     loading: false,\n        //     repos: res,\n        //     nextURL: res.meta.next_url,\n        //   });\n        // } else {\n        //   setState({\n        //     hasMoreItems: false,\n        //   });\n        // }\n        // setUrl((prev)=>[...prev,res.meta.next_url])\n      });\n  }\n  return (\n    <div style={{ height: \"700px\", overflow: \"auto\" }}>\n      <InfiniteScroll\n        pageStart={0}\n        initialLoad={false}\n        threshold={700}\n       loadMore={getData(next)}\n        hasMore={true}\n        // val={console.log(state)}\n        useWindow={true}\n      >\n        <ListLoading isLoading={false} repos={repos} />\n      </InfiniteScroll>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}