{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchContents = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: \"/widgets/home-page?count=5\"\n  });\n  useEffect(() => {\n    console.log(appState.nextURL);\n    FetchContent(appState.nextURL);\n  });\n\n  function FetchContent(nextUrl) {\n    console.log(nextUrl);\n    const apiUrl = \"http://api-v2.filmnet.ir\"; // if (nextUrl === null) {\n    // const url = \"/widgets/home-page?count=5\";\n\n    setAppState({\n      loading: true\n    });\n    fetch(apiUrl + nextUrl).then(res => res.json()).then(repos => {\n      setAppState({\n        loading: false,\n        repos: repos,\n        nextURL: repos.meta.next_url\n      });\n    });\n  } //else {\n  //   setAppState({ loading: true });\n  //   const url = apiUrl + nextUrl;\n  //   console.log(url);\n  //   fetch(url)\n  //     .then((res) => res.json())\n  //     .then((repos) => {\n  //       setAppState({\n  //         loading: false,\n  //         repos: repos,\n  //         nextURL: repos.meta.next_url,\n  //       });\n  //     });\n  // }\n  //}\n\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: new Array(20) // next={FetchContent(appState.nextURL)}\n    // hasMore={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: appState.loading,\n    repos: appState.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FetchContents;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","FetchContents","ListLoading","appState","setAppState","loading","repos","nextURL","console","log","FetchContent","nextUrl","apiUrl","fetch","then","res","json","meta","next_url","Array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACI,OAArB;AACAG,IAAAA,YAAY,CAACP,QAAQ,CAACI,OAAV,CAAZ;AACD,GAHQ,CAAT;;AAIA,WAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,UAAMC,MAAM,GAAG,0BAAf,CAF6B,CAI7B;AACE;;AACAR,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AACAQ,IAAAA,KAAK,CAACD,MAAM,GAAGD,OAAV,CAAL,CACGG,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESR,KAAD,IAAW;AACfF,MAAAA,WAAW,CAAC;AACVC,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAEA,KAFG;AAGVC,QAAAA,OAAO,EAAED,KAAK,CAACW,IAAN,CAAWC;AAHV,OAAD,CAAX;AAKD,KARH;AASA,GA3BsB,CA4BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;;AACA,sBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAE,IAAIC,KAAJ,CAAU,EAAV,CADd,CAEE;AACD;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEhB,QAAQ,CAACE,OAAjC;AAA0C,IAAA,KAAK,EAAEF,QAAQ,CAACG,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CApDD;;AAqDA,eAAeL,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchContents = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: \"/widgets/home-page?count=5\",\n  });\n  useEffect(() => { \n    console.log(appState.nextURL);\n    FetchContent(appState.nextURL);\n  });\n  function FetchContent(nextUrl) {\n    console.log(nextUrl);\n    const apiUrl = \"http://api-v2.filmnet.ir\";\n\n    // if (nextUrl === null) {\n      // const url = \"/widgets/home-page?count=5\";\n      setAppState({ loading: true });\n      fetch(apiUrl + nextUrl)\n        .then((res) => res.json())\n        .then((repos) => {\n          setAppState({\n            loading: false,\n            repos: repos,\n            nextURL: repos.meta.next_url,\n          });\n        });\n     } \n    //else {\n    //   setAppState({ loading: true });\n    //   const url = apiUrl + nextUrl;\n    //   console.log(url);\n    //   fetch(url)\n    //     .then((res) => res.json())\n    //     .then((repos) => {\n    //       setAppState({\n    //         loading: false,\n    //         repos: repos,\n    //         nextURL: repos.meta.next_url,\n    //       });\n    //     });\n    // }\n  //}\n  return (\n    <InfiniteScroll\n      dataLength={new Array(20)}\n      // next={FetchContent(appState.nextURL)}\n     // hasMore={true}\n    >\n      <ListLoading isLoading={appState.loading} repos={appState.repos} />\n    </InfiniteScroll>\n  );\n};\nexport default FetchContents;\n"]},"metadata":{},"sourceType":"module"}