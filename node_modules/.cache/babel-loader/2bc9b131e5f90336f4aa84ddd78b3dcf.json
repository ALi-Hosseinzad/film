{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/11.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from '@closeio/use-infinite-scroll';\nconst URL = '//www.omdbapi.com/?s=beautiful&apikey=fb2d739dhttp://api-v2.filmnet.ir\"';\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({\n    hasMore\n  });\n  useEffect(() => {\n    (async () => {\n      const realPage = page + 1;\n      const resp = await fetch(`${URL}&page=${realPage}`);\n      const data = await resp.json();\n      setHasMore(realPage * 10 <= data.totalResults);\n      setItems(prev => [...prev, ...data.Search]);\n    })();\n  }, [page]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollerRef,\n    className: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"section\", {\n    key: item.imdbID,\n    className: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, item.Year, \" \\u2013 \", item.Title), /*#__PURE__*/React.createElement(\"img\", {\n    width: \"180px\",\n    alt: item.Title,\n    src: item.Poster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }))), hasMore && /*#__PURE__*/React.createElement(\"div\", {\n    ref: loaderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, \"Loading\\u2026\"));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/11.jsx"],"names":["React","useState","useEffect","ContentLoading","ContentItems","useInfiniteScroll","URL","Example","ListLoading","items","setItems","hasMore","setHasMore","page","loaderRef","scrollerRef","realPage","resp","fetch","data","json","totalResults","prev","Search","map","item","imdbID","Year","Title","Poster"],"mappings":";AAAC,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACD,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,MAAMC,GAAG,GAAG,yEAAZ;AACA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAMC,WAAW,GAAGL,cAAc,CAACC,YAAD,CAAlC;AACF,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,SAAP,EAAkBC,WAAlB,IAAiCV,iBAAiB,CAAC;AAAEM,IAAAA;AAAF,GAAD,CAAxD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMc,QAAQ,GAAGH,IAAI,GAAG,CAAxB;AACA,YAAMI,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEZ,GAAI,SAAQU,QAAS,EAAzB,CAAxB;AACA,YAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAR,MAAAA,UAAU,CAACI,QAAQ,GAAG,EAAX,IAAiBG,IAAI,CAACE,YAAvB,CAAV;AACAX,MAAAA,QAAQ,CAACY,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU,GAAGH,IAAI,CAACI,MAAlB,CAAT,CAAR;AACD,KAND;AAOD,GARQ,EAQN,CAACV,IAAD,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,GAAG,EAAEE,WAAV;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACe,GAAN,CAAUC,IAAI,iBACb;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC,MAAnB;AAA2B,IAAA,SAAS,EAAC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,IADR,cACiBF,IAAI,CAACG,KADtB,CADF,eAIE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,GAAG,EAAEH,IAAI,CAACG,KAA7B;AAAoC,IAAA,GAAG,EAAEH,IAAI,CAACI,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD,CADH,EASGlB,OAAO,iBAAI;AAAK,IAAA,GAAG,EAAEG,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATd,CADF;AAaD","sourcesContent":[" import React, { useState, useEffect } from 'react';\n import ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from '@closeio/use-infinite-scroll';\n\nconst URL = '//www.omdbapi.com/?s=beautiful&apikey=fb2d739dhttp://api-v2.filmnet.ir\"';\nexport default function Example() {\n    const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({ hasMore });\n\n  useEffect(() => {\n    (async () => {\n      const realPage = page + 1;\n      const resp = await fetch(`${URL}&page=${realPage}`);\n      const data = await resp.json();\n      setHasMore(realPage * 10 <= data.totalResults);\n      setItems(prev => [...prev, ...data.Search]);\n    })();\n  }, [page]);\n\n  return (\n    <div ref={scrollerRef} className=\"1\">\n      {items.map(item => (\n        <section key={item.imdbID} className=\"2\">\n          <h3>\n            {item.Year} – {item.Title}\n          </h3>\n          <img width=\"180px\" alt={item.Title} src={item.Poster} />\n        </section>\n      ))}\n      {hasMore && <div ref={loaderRef}>Loading…</div>}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}