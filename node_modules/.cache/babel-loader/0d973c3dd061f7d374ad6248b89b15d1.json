{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function App() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null,\n    hasMoreItems: true\n  });\n  useEffect(() => {\n    getData();\n  });\n\n  function LoadMore(url) {\n    console.log(url); // getData(url);\n  }\n\n  function getData() {\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    const URL = apiurl + \"/widgets/home-page?count=5\";\n    fetch(URL).then(res => res.json()).then(res => {\n      setState({\n        loading: false,\n        repos: res,\n        nextURL: res.meta.next_url\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: LoadMore,\n    hasMore: state.hasMoreItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: state.loading,\n    repos: state.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","App","ListLoading","state","setState","loading","repos","nextURL","hasMoreItems","getData","LoadMore","url","console","log","apiurl","URL","fetch","then","res","json","meta","next_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,KAAK,EAAE,IAF0B;AAGjCC,IAAAA,OAAO,EAAE,IAHwB;AAIjCC,IAAAA,YAAY,EAAE;AAJmB,GAAD,CAAlC;AAOFZ,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,OAAO;AACR,GAFQ,CAAT;;AAGE,WAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADqB,CAEpB;AACF;;AACD,WAASF,OAAT,GAAmB;AACjB,UAAMK,MAAM,GAAG,0BAAf;AACA,UAAMC,GAAG,GAAGD,MAAM,GAAG,4BAArB;AACAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbd,MAAAA,QAAQ,CAAC;AACPC,QAAAA,OAAO,EAAE,KADF;AAEPC,QAAAA,KAAK,EAAEY,GAFA;AAGPX,QAAAA,OAAO,EAAEW,GAAG,CAACE,IAAJ,CAASC;AAHX,OAAD,CAAR;AAKD,KARH;AASD;;AACD,sBACE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEX,QAFZ;AAGE,IAAA,OAAO,EAAEP,KAAK,CAACK,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,KAAK,CAACE,OAA9B;AAAuC,IAAA,KAAK,EAAEF,KAAK,CAACG,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport default function App() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null,\n    hasMoreItems: true,\n  });\n\nuseEffect(()=>{\n  getData()\n});\n  function LoadMore(url) {\n    console.log(url);\n     // getData(url);\n  }\n  function getData() {\n    const apiurl = \"http://api-v2.filmnet.ir\";\n    const URL = apiurl + \"/widgets/home-page?count=5\";\n    fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n        setState({\n          loading: false,\n          repos: res,\n          nextURL: res.meta.next_url,\n        });\n      });\n  }\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={LoadMore}\n      hasMore={state.hasMoreItems}\n    >\n      <ListLoading isLoading={state.loading} repos={state.repos} />\n    </InfiniteScroll>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}