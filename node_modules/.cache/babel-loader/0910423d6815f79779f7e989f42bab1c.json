{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test2.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchItems = props => {\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    hasMore: true\n  });\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    getData(0);\n  }, [count]);\n  var i = 0;\n\n  function getData(number) {\n    i++;\n    console.log(i);\n    var URL = apiurl + number + \"&count=5\";\n    fetch(URL).then(res => res.json()).then(res => {\n      // console.log(res);\n      if (res.meta.next_url) {\n        setState({\n          loading: false,\n          repos: res\n        });\n      } else {\n        setState({\n          hasMoreItems: false\n        });\n      }\n    });\n  } //  function hasLoadMore(){\n  //   setCount(prev => prev+5);\n  // }\n\n\n  const loader = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 ...\");\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: state.repos.length,\n    next: getData(count + 5),\n    hasMore: state.hasMore,\n    val: console.log,\n    loader: /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Loading...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: state.isLoading,\n    repos: state.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FetchItems;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test2.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","FetchItems","props","apiurl","ListLoading","state","setState","loading","repos","hasMore","count","setCount","getData","i","number","console","log","URL","fetch","then","res","json","meta","next_url","hasMoreItems","loader","length","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,MAAM,GAAG,oDAAf;AACA,QAAMC,WAAW,GAAGN,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AACjCU,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,OAAO,EAAE;AAHwB,GAAD,CAAlC;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAIA,MAAIG,CAAC,GAAG,CAAR;;AACA,WAASD,OAAT,CAAiBE,MAAjB,EAAyB;AACvBD,IAAAA,CAAC;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAEA,QAAII,GAAG,GAAGd,MAAM,GAAGW,MAAT,GAAkB,UAA5B;AACAI,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb;AACA,UAAIA,GAAG,CAACE,IAAJ,CAASC,QAAb,EAAuB;AACrBjB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,OAAO,EAAE,KADF;AAEPC,UAAAA,KAAK,EAAEY;AAFA,SAAD,CAAR;AAID,OALD,MAKO;AACLd,QAAAA,QAAQ,CAAC;AACPkB,UAAAA,YAAY,EAAE;AADP,SAAD,CAAR;AAGD;AACF,KAdH;AAeD,GAnC2B,CAoC5B;AACA;AACA;;;AAEA,QAAMC,MAAM,gBAAG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GAAf;AACA,sBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEpB,KAAK,CAACG,KAAN,CAAYkB,MAD1B;AAEE,IAAA,IAAI,EAAEd,OAAO,CAACF,KAAK,GAAC,CAAP,CAFf;AAGE,IAAA,OAAO,EAAEL,KAAK,CAACI,OAHjB;AAIE,IAAA,GAAG,EAAEM,OAAO,CAACC,GAJf;AAKE,IAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEX,KAAK,CAACsB,SAA9B;AAAyC,IAAA,KAAK,EAAEtB,KAAK,CAACG,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAaD,CAtDD;;AAuDA,eAAeP,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchItems = (props) => {\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    loading: false,\n    repos: [],\n    hasMore: true,\n  });\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    getData(0);\n  }, [count]);\n\n  var i = 0;\n  function getData(number) {\n    i++;\n    console.log(i);\n\n    var URL = apiurl + number + \"&count=5\";\n    fetch(URL)\n      .then((res) => res.json())\n      .then((res) => {\n        // console.log(res);\n        if (res.meta.next_url) {\n          setState({\n            loading: false,\n            repos: res,\n          });\n        } else {\n          setState({\n            hasMoreItems: false,\n          });\n        }\n      });\n  }\n  //  function hasLoadMore(){\n  //   setCount(prev => prev+5);\n  // }\n\n  const loader = <div className=\"loader\">دریافت موارد بیشتر ...</div>;\n  return (\n    <InfiniteScroll\n      dataLength={state.repos.length}\n      next={getData(count+5)}\n      hasMore={state.hasMore}\n      val={console.log}\n      loader={<h4>Loading...</h4>}\n    >\n      {/* {.map((item, index) => ( */}\n      <ListLoading isLoading={state.isLoading} repos={state.repos} />\n      {/* ))} */}\n    </InfiniteScroll>\n  );\n};\nexport default FetchItems;\n"]},"metadata":{},"sourceType":"module"}