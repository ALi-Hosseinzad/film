{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/11.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from '@closeio/use-infinite-scroll';\nconst URL = 'http://api-v2.filmnet.ir';\nconst pageURL = '/widgets/home-page?count=5';\nexport default function Example() {\n  const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({\n    hasMore\n  });\n  useEffect(() => {\n    (async () => {\n      const realPage = page + 1;\n      const resp = await fetch(`${URL + pageURL}&page=${realPage}`);\n      const data = await resp.json();\n      console.log();\n      setHasMore(FetchMore(data.meta.next_url));\n      setItems(prev => [...prev, data]);\n    })();\n  }, [page]);\n\n  function FetchMore(url) {\n    (async () => {\n      const resp = await fetch(URL + url);\n      const data = await resp.json();\n      console.log(d);\n      return data;\n    })();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollerRef,\n    className: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: false,\n    repos: item,\n    key: item.meta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), hasMore && /*#__PURE__*/React.createElement(\"div\", {\n    ref: loaderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }, \"Loading\\u2026\"));\n}","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/11.jsx"],"names":["React","useState","useEffect","ContentLoading","ContentItems","useInfiniteScroll","URL","pageURL","Example","ListLoading","items","setItems","hasMore","setHasMore","page","loaderRef","scrollerRef","realPage","resp","fetch","data","json","console","log","FetchMore","meta","next_url","prev","url","d","map","item"],"mappings":";AAAC,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACD,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,MAAMC,GAAG,GAAG,0BAAZ;AACA,MAAMC,OAAO,GAAG,4BAAhB;AACA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAMC,WAAW,GAAGN,cAAc,CAACC,YAAD,CAAlC;AACF,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,IAAD,EAAOC,SAAP,EAAkBC,WAAlB,IAAiCX,iBAAiB,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAxD;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMe,QAAQ,GAAGH,IAAI,GAAG,CAAxB;AACA,YAAMI,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAG,GAACC,OAAQ,SAAQU,QAAS,EAAjC,CAAxB;AACA,YAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR;AACAV,MAAAA,UAAU,CAACW,SAAS,CAACJ,IAAI,CAACK,IAAL,CAAUC,QAAX,CAAV,CAAV;AACAf,MAAAA,QAAQ,CAACgB,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAASP,IAAT,CAAT,CAAR;AACD,KAPD;AAQD,GATQ,EASN,CAACN,IAAD,CATM,CAAT;;AAWC,WAASU,SAAT,CAAmBI,GAAnB,EAAwB;AACrB,KAAC,YAAY;AACX,YAAMV,IAAI,GAAG,MAAMC,KAAK,CAACb,GAAG,GAACsB,GAAL,CAAxB;AACA,YAAMR,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACA,aAAOT,IAAP;AACD,KALD;AAOH;;AACD,sBACE;AAAK,IAAA,GAAG,EAAEJ,WAAV;AAAuB,IAAA,SAAS,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACoB,GAAN,CAAUC,IAAI,iBACb,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE,KAAxB;AAA+B,IAAA,KAAK,EAAEA,IAAtC;AAA4C,IAAA,GAAG,EAAEA,IAAI,CAACN,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIGb,OAAO,iBAAI;AAAK,IAAA,GAAG,EAAEG,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJd,CADF;AAQD","sourcesContent":[" import React, { useState, useEffect } from 'react';\n import ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport useInfiniteScroll from '@closeio/use-infinite-scroll';\n\nconst URL = 'http://api-v2.filmnet.ir';\nconst pageURL = '/widgets/home-page?count=5';\nexport default function Example() {\n    const ListLoading = ContentLoading(ContentItems);\n  const [items, setItems] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [page, loaderRef, scrollerRef] = useInfiniteScroll({ hasMore });\n\n  useEffect(() => {\n    (async () => {\n      const realPage = page + 1;\n      const resp = await fetch(`${URL+pageURL}&page=${realPage}`);\n      const data = await resp.json();\n      console.log();\n      setHasMore(FetchMore(data.meta.next_url));\n      setItems(prev => [...prev,data]);\n    })();\n  }, [page]);\n\n   function FetchMore(url) {\n      (async () => {\n        const resp = await fetch(URL+url);\n        const data = await resp.json();\n        console.log(d);\n        return data;\n      })();\n      \n  }\n  return (\n    <div ref={scrollerRef} className=\"1\">\n      {items.map(item => (\n        <ListLoading isLoading={false} repos={item} key={item.meta}></ListLoading>\n      ))}\n      {hasMore && <div ref={loaderRef}>Loadingâ€¦</div>}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}