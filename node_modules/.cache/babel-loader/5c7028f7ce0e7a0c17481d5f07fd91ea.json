{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test.jsx\";\nimport React, { useEffect, useReducer, forwardRef } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MainSlide from \"./../slide/mainData\";\nimport Card from \"./../card/card\";\nimport \"./FetchContent.css\";\nimport NavBar from \"../navBar/NavBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"../footer/footer\";\nimport Scroll from \"../scroll/Scroll\";\nimport Filter from \"../filter/filter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default\n  }\n}));\n\nconst FetchItems = () => {\n  const classes = useStyles();\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), [{\n    data: [],\n    count: 0,\n    hasMore: true,\n    loading: false\n  }]);\n  useEffect(() => {\n    function getData(number) {\n      const URL = apiurl + number + \"&count=5\";\n      cost;\n      setState({ ...state,\n        loading: true\n      });\n      fetch(URL).then(res => res.json()).then(res => {\n        if (state.count < res.meta.total_items_count) {\n          setState({ ...state,\n            loading: false,\n            data: [res]\n          });\n        } else {\n          setState({ ...state,\n            hasMore: false\n          });\n        }\n      });\n    }\n\n    console.log(state.count);\n    getData(state.count);\n  }, [state.count]);\n  const arr = state.map(items => {\n    console.log(items.data);\n    items.data.map((item, index) => {\n      if (item.data[0].type === \"main_slider\") {\n        return /*#__PURE__*/React.createElement(MainSlide, {\n          val: item.data,\n          key: index + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return null;\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, state, /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Scroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, arr), /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    className: \"scroll\",\n    dataLength: state.count,\n    next: () => setState({\n      count: state.count + 5\n    }),\n    hasMore: state.hasMore //   val={console.log(state.data)}\n    ,\n    loader: /*#__PURE__*/React.createElement(\"p\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 ...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, state.data.map((item, index) => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: state.loading,\n    repos: item,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default forwardRef(FetchItems);","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test.jsx"],"names":["React","useEffect","useReducer","forwardRef","ContentLoading","ContentItems","InfiniteScroll","MainSlide","Card","NavBar","makeStyles","Grid","Paper","Footer","Scroll","Filter","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","primary","backgroundColor","background","default","FetchItems","classes","apiurl","ListLoading","state","setState","newState","data","count","hasMore","loading","getData","number","URL","cost","fetch","then","res","json","meta","total_items_count","console","log","arr","map","items","item","index","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, forwardRef } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MainSlide from \"./../slide/mainData\";\nimport Card from \"./../card/card\";\nimport \"./FetchContent.css\";\nimport NavBar from \"../navBar/NavBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"../footer/footer\";\nimport Scroll from \"../scroll/Scroll\";\nimport Filter from \"../filter/filter\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default,\n  },\n}));\nconst FetchItems = () => {\n  const classes = useStyles();\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n\n  const [state, setState] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    [\n      {\n        data: [],\n        count: 0,\n        hasMore: true,\n        loading: false,\n      },\n    ]\n  );\n  useEffect(() => {\n    function getData(number) {\n      const URL = apiurl + number + \"&count=5\";\ncost\n      setState({ ...state, loading: true });\n      fetch(URL)\n        .then((res) => res.json())\n        .then((res) => {\n          if (state.count < res.meta.total_items_count) {\n            setState({ ...state, loading: false, data: [res] });\n          } else {\n            setState({ ...state, hasMore: false });\n          }\n        });\n    }\n    console.log(state.count);\n    getData(state.count);\n  }, [state.count]);\n\n  const arr = state.map((items) => {\n    console.log(items.data);\n    items.data.map((item, index) => {\n      if (item.data[0].type === \"main_slider\") {\n        return <MainSlide val={item.data} key={index + 1} />;\n      } else {\n        return null;\n      }\n    });\n  });\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            {state}\n            <Filter />\n            <Scroll />\n            <div>{arr}</div>\n            <NavBar />\n            <Card />\n            <InfiniteScroll\n              className=\"scroll\"\n              dataLength={state.count}\n              next={() => setState({ count: state.count + 5 })}\n              hasMore={state.hasMore}\n              //   val={console.log(state.data)}\n              loader={<p className=\"loader\">دریافت موارد بیشتر ...</p>}\n            >\n              {state.data.map((item, index) => (\n                <ListLoading\n                  isLoading={state.loading}\n                  repos={item}\n                  key={index}\n                />\n              ))}\n            </InfiniteScroll>\n            <Footer />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default forwardRef(FetchItems);\n"]},"metadata":{},"sourceType":"module"}