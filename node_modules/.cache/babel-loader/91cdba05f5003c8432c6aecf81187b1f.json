{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchContents = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: \"/widgets/home-page?count=5\",\n    hasMore: true\n  });\n  const [page, setPage] = useState({\n    items: []\n  });\n  Fetch(appState.nextURL);\n\n  function Fetch(nextUrl) {\n    useEffect(() => {\n      (async () => {\n        const apiUrl = \"http://api-v2.filmnet.ir\";\n        const URL = apiUrl + nextUrl;\n        setAppState({\n          loading: true\n        });\n        fetch(URL).then(res => res.json()).then(repos => {\n          setAppState({\n            loading: false,\n            repos: repos,\n            nextURL: repos.meta.next_url\n          });\n\n          if (!repos.meta.next_url) {\n            setAppState({\n              hasMore: false\n            });\n          }\n\n          setPage({\n            items: [{\n              loading: false,\n              repos: repos,\n              nextURL: repos.meta.next_url\n            }]\n          });\n        });\n      })();\n    }, [setAppState]);\n  } // function FetchMore(url) {\n  //   console.log(url);\n  //   Fetch(url);\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollableDiv\",\n    style: {\n      height: \"auto\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: window.length,\n    hasMore: appState.hasMore,\n    inverse: true,\n    scrollableTarget: \"scrollableDiv\",\n    key: console.log(appState.nextURL) // next={Fetch(appState.nextURL)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading // key={console.log(page)}\n  , {\n    isLoading: appState.loading,\n    repos: appState.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FetchContents;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","FetchContents","ListLoading","appState","setAppState","loading","repos","nextURL","hasMore","page","setPage","items","Fetch","nextUrl","apiUrl","URL","fetch","then","res","json","meta","next_url","height","overflow","window","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAE,4BAH8B;AAIvCC,IAAAA,OAAO,EAAE;AAJ8B,GAAD,CAAxC;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AAEAC,EAAAA,KAAK,CAACT,QAAQ,CAACI,OAAV,CAAL;;AACA,WAASK,KAAT,CAAeC,OAAf,EAAwB;AACtBjB,IAAAA,SAAS,CAAC,MAAM;AACd,OAAC,YAAY;AACb,cAAMkB,MAAM,GAAG,0BAAf;AACA,cAAMC,GAAG,GAAGD,MAAM,GAAGD,OAArB;AACAT,QAAAA,WAAW,CAAC;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAX;AACAW,QAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESX,KAAD,IAAW;AACdF,UAAAA,WAAW,CAAC;AACXC,YAAAA,OAAO,EAAE,KADE;AAEXC,YAAAA,KAAK,EAAEA,KAFI;AAGXC,YAAAA,OAAO,EAAED,KAAK,CAACc,IAAN,CAAWC;AAHT,WAAD,CAAX;;AAKD,cAAI,CAACf,KAAK,CAACc,IAAN,CAAWC,QAAhB,EAA0B;AACvBjB,YAAAA,WAAW,CAAC;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAD,CAAX;AACF;;AACAE,UAAAA,OAAO,CAAC;AACPC,YAAAA,KAAK,EAAE,CACL;AAAEN,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,KAAK,EAAEA,KAAzB;AAAgCC,cAAAA,OAAO,EAAED,KAAK,CAACc,IAAN,CAAWC;AAApD,aADK;AADA,WAAD,CAAP;AAKF,SAhBH;AAiBC,OArBD;AAsBD,KAvBQ,EAuBN,CAACjB,WAAD,CAvBM,CAAT;AAwBD,GApCyB,CAsC1B;AACA;AACA;AACA;;;AACA,sBACE;AACE,IAAA,EAAE,EAAC,eADL;AAEG,IAAA,KAAK,EAAE;AAAEkB,MAAAA,MAAM,EAAC,MAAT;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEC,MAAM,CAACC,MADrB;AAEE,IAAA,OAAO,EAAEtB,QAAQ,CAACK,OAFpB;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,gBAAgB,EAAC,eAJnB;AAKE,IAAA,GAAG,EAAEkB,OAAO,CAACC,GAAR,CAAYxB,QAAQ,CAACI,OAArB,CALP,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,WAAD,CACE;AADF;AAEE,IAAA,SAAS,EAAEJ,QAAQ,CAACE,OAFtB;AAGE,IAAA,KAAK,EAAEF,QAAQ,CAACG,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAJF,CADF;AAuBD,CAjED;;AAkEA,eAAeL,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchContents = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: \"/widgets/home-page?count=5\",\n    hasMore: true,\n  });\n  const [page, setPage] = useState({ items: [] });\n\n  Fetch(appState.nextURL);\n  function Fetch(nextUrl) {\n    useEffect(() => {\n      (async () => {\n      const apiUrl = \"http://api-v2.filmnet.ir\";\n      const URL = apiUrl + nextUrl;\n      setAppState({ loading: true });\n      fetch(URL)\n        .then((res) => res.json())\n        .then((repos) => {\n           setAppState({\n            loading: false,\n            repos: repos,\n            nextURL: repos.meta.next_url,\n          });\n          if (!repos.meta.next_url) {\n             setAppState({ hasMore: false });\n          }\n           setPage({\n            items: [\n              { loading: false, repos: repos, nextURL: repos.meta.next_url }\n            ],\n          });\n        });\n      })();\n    }, [setAppState]);\n  }\n\n  // function FetchMore(url) {\n  //   console.log(url);\n  //   Fetch(url);\n  // }\n  return (\n    <div\n      id=\"scrollableDiv\"\n       style={{ height:\"auto\", overflow: \"auto\" }}\n    >\n      <InfiniteScroll\n        dataLength={window.length}\n        hasMore={appState.hasMore}\n        inverse={true}\n        scrollableTarget=\"scrollableDiv\"\n        key={console.log(appState.nextURL)}\n        // next={Fetch(appState.nextURL)}\n      >\n        {/* {page.map((item, index) => ( */}\n        <ListLoading\n          // key={console.log(page)}\n          isLoading={appState.loading}\n          repos={appState.repos}\n        />\n        {/* ))} */}\n      </InfiniteScroll>\n    </div>\n  );\n};\nexport default FetchContents;\n"]},"metadata":{},"sourceType":"module"}