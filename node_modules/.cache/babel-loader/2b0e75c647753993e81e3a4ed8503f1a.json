{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/test2.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MainSlide from \"./../slide/mainData\";\nimport Card from \"./../card/card\";\nimport \"./FetchContent.css\";\nimport NavBar from \"../navBar/NavBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"../footer/footer\";\nimport Scroll from '../scroll/Scroll';\nimport Filter from \"../filter/filter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default\n  }\n}));\n\nconst FetchItems = props => {\n  const classes = useStyles();\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n  const [state, setState] = useState({\n    data: [],\n    count: 0,\n    loading: false,\n    hasMore: true\n  }); // const [count, setCount] = useState(0);\n  // const [hasMore, setHasMore] = useState(true);\n  // const [loading,setLoadeing] = useState(false)\n\n  useEffect(nextPrpos => {\n    function getData(number) {\n      var URL = apiurl + number + \"&count=5\"; //setLoadeing(true)\n\n      fetch(URL).then(res => res.json()).then(res => {\n        if (count < res.meta.total_items_count) {\n          setState({});\n          console.log(props);\n          setState(prev => [...prev, res]);\n        } else {\n          setHasMore(false);\n        }\n      });\n    }\n\n    getData(count);\n  }, [count]);\n  const arr = state.map((items, index) => {\n    if (index === 0) {\n      return /*#__PURE__*/React.createElement(MainSlide, {\n        val: items.data,\n        key: index + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Scroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, arr), /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    className: \"scroll\",\n    dataLength: state.length,\n    next: () => setCount(prevCount => prevCount + 5),\n    hasMore: hasMore // val={console.log(count)}\n    ,\n    loader: /*#__PURE__*/React.createElement(\"p\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u0648\\u0627\\u0631\\u062F \\u0628\\u06CC\\u0634\\u062A\\u0631 ...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, state.map((item, index) => /*#__PURE__*/React.createElement(ListLoading, {\n    isLoading: loading,\n    repos: item,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default FetchItems;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/test2.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","MainSlide","Card","NavBar","makeStyles","Grid","Paper","Footer","Scroll","Filter","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","primary","backgroundColor","background","default","FetchItems","props","classes","apiurl","ListLoading","state","setState","data","count","loading","hasMore","nextPrpos","getData","number","URL","fetch","then","res","json","meta","total_items_count","console","log","prev","setHasMore","arr","map","items","index","length","setCount","prevCount","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MainSlide from \"./../slide/mainData\";\nimport Card from \"./../card/card\";\nimport \"./FetchContent.css\";\nimport NavBar from \"../navBar/NavBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Footer from \"../footer/footer\";\nimport Scroll from '../scroll/Scroll'; \nimport Filter from \"../filter/filter\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"start\",\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.default,\n  },\n}));\nconst FetchItems = (props) => {\n  const classes = useStyles();\n  const apiurl = \"http://api-v2.filmnet.ir/widgets/home-page?offset=\";\n  const ListLoading = ContentLoading(ContentItems);\n\n  const [state, setState] = useState({\n    data:[],\n    count:0,\n    loading:false,\n    hasMore:true\n  });\n  // const [count, setCount] = useState(0);\n  // const [hasMore, setHasMore] = useState(true);\n  // const [loading,setLoadeing] = useState(false)\n  useEffect((nextPrpos) => {\n    function getData(number) {\n      var URL = apiurl + number + \"&count=5\";\n      //setLoadeing(true)\n      fetch(URL)\n        .then((res) => res.json())\n        .then((res) => {\n          if (count < res.meta.total_items_count) {\n            setState({\n\n            })\n            console.log(props);\n            setState((prev) => [...prev, res]);\n          } else {\n            setHasMore(false);\n          }\n        });\n    }\n    getData(count);\n  }, [count]);\n\n  const arr = state.map((items, index) => {\n    if (index === 0) {\n      return <MainSlide val={items.data} key={index + 1} />;\n    } else {\n      return null;\n    }\n  });\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Filter />\n            <Scroll />\n            <div>{arr}</div>\n            <NavBar />\n            <Card />\n            <InfiniteScroll\n              className=\"scroll\"\n              dataLength={state.length}\n              next={() => setCount((prevCount) => prevCount + 5)}\n              hasMore={hasMore}\n              // val={console.log(count)}\n              loader={<p className=\"loader\">دریافت موارد بیشتر ...</p>}\n            >\n              {state.map((item, index) => (\n                <ListLoading isLoading={loading} repos={item} key={index} />\n              ))}\n            </InfiniteScroll>\n            <Footer />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default FetchItems;\n"]},"metadata":{},"sourceType":"module"}