{"ast":null,"code":"var _jsxFileName = \"/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchContent = () => {\n  const ListLoading = ContentLoading(ContentItems);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null\n  });\n  useEffect(() => {\n    const apiUrl = `http://api-v2.filmnet.ir`;\n\n    if (appState.nextURL) {\n      setAppState({\n        loading: true\n      });\n      fetch(apiUrl + appState.nextURL).then(res => res.json()).then(repos => {\n        setAppState({\n          loading: false,\n          repos: repos.data,\n          nextURL: repos.meta.next_url\n        });\n      });\n    } else {\n      setAppState({\n        loading: true\n      });\n      const url = \"/widgets/home-page?count=5\";\n      fetch(apiUrl + url).then(res => res.json()).then(repos => {\n        setAppState({\n          loading: false,\n          repos: Object.values(repos),\n          nextURL: repos.meta.next_url\n        });\n      });\n    }\n  }, [setAppState]);\n\n  const FetchContent = props => {\n    setTimeout(() => {\n      if (appState.nextURL === props.nextURL) {}\n    }, 1800);\n  };\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: appState.repos,\n    next: FetchContent(appState),\n    hasMore: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListLoading, {\n    key: appState.nextURL,\n    isLoading: appState.loading,\n    repos: appState.repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FetchContent;","map":{"version":3,"sources":["/home/alihz/Desktop/react/film/src/components/content/FetchContent.jsx"],"names":["React","useEffect","useState","ContentLoading","ContentItems","InfiniteScroll","FetchContent","ListLoading","appState","setAppState","loading","repos","nextURL","apiUrl","fetch","then","res","json","data","meta","next_url","url","Object","values","props","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAGJ,cAAc,CAACC,YAAD,CAAlC;AAEA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,KAAK,EAAE,IAFgC;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,MAAM,GAAI,0BAAhB;;AACA,QAAIL,QAAQ,CAACI,OAAb,EAAsB;AACpBH,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAX;AACAI,MAAAA,KAAK,CAACD,MAAM,GAAGL,QAAQ,CAACI,OAAnB,CAAL,CACGG,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESJ,KAAD,IAAW;AACfF,QAAAA,WAAW,CAAC;AACVC,UAAAA,OAAO,EAAE,KADC;AAEVC,UAAAA,KAAK,EAAEA,KAAK,CAACO,IAFH;AAGVN,UAAAA,OAAO,EAAED,KAAK,CAACQ,IAAN,CAAWC;AAHV,SAAD,CAAX;AAKD,OARH;AASD,KAXD,MAWO;AACLX,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAX;AACA,YAAMW,GAAG,GAAG,4BAAZ;AACAP,MAAAA,KAAK,CAACD,MAAM,GAAGQ,GAAV,CAAL,CACGN,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESJ,KAAD,IAAW;AACfF,QAAAA,WAAW,CAAC;AACVC,UAAAA,OAAO,EAAE,KADC;AAEVC,UAAAA,KAAK,EAAEW,MAAM,CAACC,MAAP,CAAcZ,KAAd,CAFG;AAGVC,UAAAA,OAAO,EAAED,KAAK,CAACQ,IAAN,CAAWC;AAHV,SAAD,CAAX;AAKD,OARH;AASD;AACF,GA1BQ,EA0BN,CAACX,WAAD,CA1BM,CAAT;;AA6BA,QAAMH,YAAY,GAAIkB,KAAD,IAAW;AAC5BC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAGjB,QAAQ,CAACI,OAAT,KAAmBY,KAAK,CAACZ,OAA5B,EAAoC,CAEnC;AAEF,KALS,EAKP,IALO,CAAV;AAMH,GAPD;;AAQA,sBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEJ,QAAQ,CAACG,KADvB;AAEE,IAAA,IAAI,EAAEL,YAAY,CAACE,QAAD,CAFpB;AAGE,IAAA,OAAO,EAAE,IAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACI,OADhB;AAEE,IAAA,SAAS,EAAEJ,QAAQ,CAACE,OAFtB;AAGE,IAAA,KAAK,EAAEF,QAAQ,CAACG,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAgBD,CA9DD;;AA+DA,eAAeL,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ContentLoading from \"./ContentLoading\";\nimport ContentItems from \"./ContentItems\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst FetchContent = () => {\n  const ListLoading = ContentLoading(ContentItems);\n\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n    nextURL: null,\n  });\n\n  useEffect(() => {\n    const apiUrl = `http://api-v2.filmnet.ir`;\n    if (appState.nextURL) {\n      setAppState({ loading: true });\n      fetch(apiUrl + appState.nextURL)\n        .then((res) => res.json())\n        .then((repos) => {\n          setAppState({\n            loading: false,\n            repos: repos.data,\n            nextURL: repos.meta.next_url,\n          });\n        });\n    } else {\n      setAppState({ loading: true });\n      const url = \"/widgets/home-page?count=5\";\n      fetch(apiUrl + url)\n        .then((res) => res.json())\n        .then((repos) => {\n          setAppState({\n            loading: false,\n            repos: Object.values(repos),\n            nextURL: repos.meta.next_url,\n          });\n        });\n    }\n  }, [setAppState]);\n\n  \n  const FetchContent = (props) => {\n      setTimeout(() => {\n        if(appState.nextURL===props.nextURL){\n\n        }\n         \n      }, 1800);\n  };\n  return (\n    <InfiniteScroll\n      dataLength={appState.repos}\n      next={FetchContent(appState)}\n      hasMore={true}\n    >\n      {/* {Object.values(appState).map((i, index) => ( */}\n      <ListLoading\n        key={appState.nextURL}\n        isLoading={appState.loading}\n        repos={appState.repos}\n      />\n      {/* ))} */}\n      {}\n    </InfiniteScroll>\n  );\n};\nexport default FetchContent;\n"]},"metadata":{},"sourceType":"module"}